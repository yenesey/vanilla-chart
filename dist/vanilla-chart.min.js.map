{"version":3,"sources":["./src/vanilla-chart.js"],"names":["_min","Math","min","_max","max","_round","round","_abs","abs","_listen","target","events","handler","listen","i","length","removeEventListener","addEventListener","defaults","padding","minimapHeightRel","minimapBandSize","colors","background","minimap","minimapFrame","minimapDrag","label","labelBackground","transition","run","duration","ts","from","to","pos","onComplete","VanillaChart","containerId","data","this","names","options","container","document","getElementById","Error","canvas","appendChild","createElement","ctx","getContext","font","window","getComputedStyle","vw","vh","select","controls","h","width","left","right","rlLeft","rlRight","a","b","_transitions","Object","create","graph","pointer","setData","clientWidth","height","clientHeight","floor","draw","bind","move","mousetouch","pointerX","pointerY","_drag","mode","start","runBnd","doneBnd","_getMinimapRect","self","mm","margin","y","x","w","_calcMinimap","scaleView","dataLength","_iterateControls","cb","pad","col","_inRect","r","_getColumn","name","columns","_fontShift","delta","bold","replace","m","p1","Number","_getDateText","unixDate","part","String","prototype","substr","apply","Date","_drawRoundedRect","corners","methods","moveTo","_drawGraph","useMinimap","lineWidth","grid","maxY","symbolSize","measureText","scaleX","scaleY","Y0","visCount","lineJoin","visible","beginPath","strokeStyle","dataY","lineTo","stroke","msg","msgWidth","fillStyle","fillText","stepY","toString","labelSize","dense","dataX","arc","PI","fill","_labelHeight","bkColor","borderColor","labelColor","date","dateLabel","dateWidth","obj","key","value","color","p","_x","_drawLabelBox","_draw","fillRect","initTransition","getMaxY","textBaseline","_drawControls","sb","_drawMinimap","trns","result","trn","performance","now","requestAnimationFrame","e","getBoundingClientRect","type","targetTouches","clientX","clientY","top","event","_getPointingRegion","style","cursor","sbSize","preventDefault","setVisibility","TypeError","k","vis","column","running","call"],"mappings":"CAAA,WAEA,aAEA,IACCA,EAAOC,KAAKC,IACZC,EAAOF,KAAKG,IACZC,EAASJ,KAAKK,MACdC,EAAON,KAAKO,IAEb,SAASC,EAAQC,EAAQC,EAAQC,EAASC,GACzC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,KACtB,IAAXD,EACCH,EAAOM,oBAAoBL,EAAOG,GAAIF,GACtCF,EAAOO,iBAAiBN,EAAOG,GAAIF,GAGvC,IAAIM,EAAW,CACdC,QAAS,EACTC,iBAAkB,IAClBC,gBAAiB,GACjBC,OAAQ,CACPC,WAAY,OACZC,QAAS,UACTC,aAAc,UACdC,YAAa,2BACbC,MAAO,OACPC,gBAAiB,8BAIfC,EAAa,CAChBC,KAAK,EACLC,SAAU,IACVC,GAAI,EACJC,KAAM,EACNC,GAAI,EACJC,IAAK,EACLC,WAAY,MAKb,SAASC,EAAaC,EAAaC,GAYlC,GAJAC,KAAKD,KAAO,KACZC,KAAKC,MAAQ,GACbD,KAAKE,QAAUxB,EACfsB,KAAKG,UAAYC,SAASC,eAAeP,IACpCE,KAAKG,UAAW,MAAM,IAAIG,MAAM,8BACrCN,KAAKO,OAASP,KAAKG,UAAUK,YAAYJ,SAASK,cAAc,WAChET,KAAKU,IAAMV,KAAKO,OAAOI,WAAW,MAClCX,KAAKU,IAAIE,KAAOC,OAAOC,iBAAiBd,KAAKG,UAAW,MAAMS,KAC9DZ,KAAKY,KAAOZ,KAAKU,IAAIE,KACrBZ,KAAKe,GAAK,EACVf,KAAKgB,GAAK,EACVhB,KAAKiB,QAAU,EAEfjB,KAAKkB,SAAW,CACfC,EAAG,EACHH,GAAI,EACJI,MAAO,GAGRpB,KAAKhB,QAAU,CACdqC,KAAM,EACNC,MAAO,EACPC,OAAQ,IACRC,QAAS,EACTC,EAAG,EACHC,EAAG,EACHV,GAAI,GAGLhB,KAAK2B,aAAe,CACnB3C,QAAS4C,OAAOC,OAAOxC,GACvByC,MAAOF,OAAOC,OAAOxC,GACrB0C,QAASH,OAAOC,OAAOxC,IAGxBW,KAAKgC,QAAQjC,GAab9B,EAAQ4C,OAAQ,CAAC,SAAS,QAXP,WAClBb,KAAKe,GAAKf,KAAKO,OAAOa,MAASpB,KAAKG,UAAU8B,YAC9CjC,KAAKgB,GAAKhB,KAAKO,OAAO2B,OAASlC,KAAKG,UAAUgC,aAC9CnC,KAAKhB,QAAQqC,KAAOxD,EAAOmC,KAAKe,GAAKf,KAAKhB,QAAQuC,QAClDvB,KAAKhB,QAAQsC,MAAQzD,EAAOmC,KAAKe,GAAKf,KAAKhB,QAAQwC,SACnDxB,KAAKhB,QAAQgC,GAAKnD,EAAOmC,KAAKgB,GAAKhB,KAAKE,QAAQtB,kBAChDoB,KAAKkB,SAASF,IAAMhB,KAAKkB,SAASC,EAAyB,EAArBnB,KAAKE,QAAQvB,UAAc,EAAIlB,KAAK2E,MAAMpC,KAAKkB,SAASE,MAAMpB,KAAKe,KACzGf,KAAKiB,QAAU,EACfjB,KAAKqC,QAG0CC,KAAKtC,OACrD/B,EAAQ+B,KAAKO,OAAQ,CAAC,YAAa,YAAaP,KAAKuC,KAAKD,KAAKtC,OAC/D/B,EAAQ+B,KAAKO,OAAQ,CAAC,YAAa,cAAeP,KAAKwC,WAAWF,KAAKtC,QAGxE,WAEC,IAAIyC,EAAW,EACXC,EAAW,EACXC,EAAQ,CACXC,KAAM,EACNC,MAAO,EACPxB,KAAM,EACNC,MAAO,EACPwB,OAAQ,KACRC,QAAS,MAGV,SAASC,EAAgBC,GACxB,IAAIC,EAAKD,EAAKjE,QACVmE,EAAStF,EAAe,GAARqF,EAAGlC,IACvB,MAAO,CACNoC,EAAGH,EAAKjC,GAAKkC,EAAGlC,GAAKmC,EAASF,EAAK/B,SAASF,GAC5CqC,EAAGH,EAAG7B,KACNiC,EAAGJ,EAAG5B,MAAQ4B,EAAG7B,KACjBF,EAAG+B,EAAGlC,GAAc,EAATmC,GAIb,SAASI,EAAaN,GACrB,GAAgB,IAAZA,EAAKlC,GAAT,CACA,IAAImC,EAAKD,EAAKjE,QACVwE,EAAYP,EAAKlC,IAAMkC,EAAKQ,WAAa,GAC7CP,EAAG3B,OAAS2B,EAAG7B,KAAO4B,EAAKlC,GAC3BmC,EAAG1B,QAAU0B,EAAG5B,MAAQ2B,EAAKlC,GAC7BmC,EAAGzB,EAAI5D,EAAOqF,EAAG7B,KAAOmC,GACxBN,EAAGxB,EAAI7D,EAAOqF,EAAG5B,MAAQkC,IAG1B,SAASE,EAAiBT,EAAMU,GAC/B,IAAIC,EAAMX,EAAK/C,QAAQvB,QACnBuC,EAAW+B,EAAK/B,SAChBjB,EAAQgD,EAAKhD,MACboD,EAAIO,EAAKtF,EAAI,EACb8E,EAAIH,EAAKjC,GAAKE,EAASF,GAAK4C,EAChC,IAAK,IAAIC,KAAOZ,EAAKlD,KAAKE,MACrBoD,EAAIpD,EAAM4D,GAAKzC,MAAQwC,EAAMX,EAAKlC,KACrCsC,EAAIO,EACJR,EAAIA,EAAIlC,EAASC,EAAIyC,GAElBD,GAAIA,EAAG,CAACN,EAAGA,EAAGD,EAAGA,EAAGE,EAAGrD,EAAM4D,GAAKzC,MAAOD,EAAGD,EAASC,EAAIyC,GAAMC,GACnER,EAAIA,EAAIpD,EAAM4D,GAAKzC,MAAQwC,EAC3BtF,IAED,OAAOA,EAGR,SAASwF,EAAQT,EAAGD,EAAGW,GACtB,OAAQA,EAAEV,GAAKA,GAAKA,GAAKU,EAAEV,EAAIU,EAAET,GAAKS,EAAEX,GAAKA,GAAKA,GAAKW,EAAEX,EAAIW,EAAE5C,EAehE,SAAS6C,EAAWjE,EAAMkE,GACzB,IAAK,IAAI3F,EAAI,EAAGA,EAAIyB,EAAKmE,QAAQ3F,OAAQD,IACxC,GAAIyB,EAAKmE,QAAQ5F,GAAG,KAAO2F,EAAM,OAAOlE,EAAKmE,QAAQ5F,GAEtD,OAAO,KAuDR,SAAS6F,EAAWvD,EAAMwD,EAAOC,GAChC,OAAOzD,EAAK0D,QAAQ,gBAAiB,SAASC,EAAGC,GAAK,OAAQH,EAAK,QAAQ,IAAMI,OAAOA,OAAOD,GAAIJ,GAAO,OAG3G,SAASM,EAAaC,EAAUC,GAC/B,OAAOC,OAAOC,UAAUC,OAAOC,MAAM,IAAKC,KAAKN,GAAY,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,GAAI,IAAIC,IAG/F,SAASM,EAAiBxE,EAAK2C,EAAGD,EAAGE,EAAGnC,EAAG4C,EAAGoB,GAC7C,IAAIC,EAAU,CAAC,QAAS,UAOxB,OANAD,EAAUA,GAAW,CAAC,EAAG,EAAG,EAAG,GAC/BzE,EAAI2E,OAAOhC,EAAEU,EAAGX,GAChB1C,EAAK0E,EAAQD,EAAQ,KAAM9B,EAAEC,EAAGF,EAAKC,EAAEC,EAAGF,EAAEjC,EAAG4C,GAC/CrD,EAAK0E,EAAQD,EAAQ,KAAM9B,EAAEC,EAAGF,EAAEjC,EAAGkC,EAAKD,EAAEjC,EAAG4C,GAC/CrD,EAAK0E,EAAQD,EAAQ,KAAM9B,EAAKD,EAAEjC,EAAGkC,EAAKD,EAAKW,GAC/CrD,EAAK0E,EAAQD,EAAQ,KAAM9B,EAAKD,EAAKC,EAAEC,EAAGF,EAAKW,GACxCrD,EAoDR,SAAS4E,EAAWrC,EAAMG,EAAGlB,EAAQqD,EAAYC,EAAWC,EAAMC,GAEjE,IAAIhF,EAAMuC,EAAKvC,IACXiF,EAAajF,EAAIkF,YAAY,KAAKxE,MAClCqE,IAAMvD,EAASA,EAASyD,EAAa,GACzC,IAAI5F,EAAOkD,EAAKlD,KACfE,EAAQgD,EAAKhD,MAEVoB,EAAO,EACVC,EAAQ2B,EAAKlC,GACbU,EAAI,EACJC,EAAIuB,EAAKQ,WAAW,EACjB8B,IACH9D,EAAIwB,EAAKjE,QAAQyC,EACjBC,EAAIuB,EAAKjE,QAAQ0C,EACjBL,EAAO4B,EAAKjE,QAAQqC,KACpBC,EAAQ2B,EAAKjE,QAAQsC,OAEtB,IAAIF,EAAQ6B,EAAKlC,GAChByC,EAAYpC,GAAS6B,EAAKQ,WAAa,GAGvCoC,EAAU,GADAvE,EAAQF,EADTC,EAAOD,GAGhB0E,EAAS5D,EAASwD,EAClBK,EAAK3C,EAAIlB,EACT8D,EAAW,EAKZ,IAAK,IAAI/B,KAHTvD,EAAI8E,UAAYA,EAChB9E,EAAIuF,SAAW,QACfvF,EAAIE,KAAOqC,EAAKrC,KACCX,EAAO,GAAIA,EAAMgE,GAAMiC,QAAS,CAChDF,IACAtF,EAAIyF,YACJzF,EAAI0F,YAAcrG,EAAKjB,OAAOmF,GAG9B,IAFA,IAAIoC,EAAQrC,EAAWjE,EAAMkE,GAEpB3F,EAAImD,EAAGnD,GAAKoD,EAAGpD,IAAKoC,EAAI4F,QAC/BhI,EAAIkF,EAAYnC,GAAQwE,EACzBE,EAAKM,EAAM/H,EAAI,GAAKwH,GAErBpF,EAAI6F,SAGL,GAAId,GAAqB,IAAbO,EAAgB,CAC3B,IAAIQ,EAAM,qBACNC,EAAW/F,EAAIkF,YAAYY,GAAKpF,MAIpC,OAHAV,EAAIgG,UAAYzD,EAAK/C,QAAQpB,OAAOK,MACpCuB,EAAIE,KAAOuD,EAAWzD,EAAIE,KAAM,GAAG,QACnCF,EAAIiG,SAASH,EAAKpF,EAAM,EAAEqF,EAAS,EAAIvE,EAAO,GAI/C,GAAKuD,EAAL,CAEA/E,EAAI8E,UAAY,GAChB9E,EAAIyF,YACJzF,EAAI0F,YAAc,OAClB,IAAIQ,EAAQlB,EAAO,EACnBhF,EAAIgG,UAAYzD,EAAK/C,QAAQpB,OAAOK,MACpC,IAASiE,EAAI,EAAGA,EAAI,EAAGA,IACtB1C,EAAI2E,OAAO,EAAGU,EAAK3C,EAAIwD,EAAQd,GAC/BpF,EAAI4F,OAAOlF,EAAO2E,EAAK3C,EAAIwD,EAAQd,GACnCpF,EAAIiG,SAAS9I,EAAOuF,EAAIwD,GAAOC,WAAY,EAAGd,EAAK3C,EAAIwD,EAASd,GAEjEpF,EAAI6F,SAGJ,IAAIO,EAAyB,EAAbnB,EACZoB,EAASpJ,EAAKI,EAAK2D,EAAID,GAAKL,EAAQ0F,EAAW,GAE/CE,EAAQhD,EAAWjE,EAAM,KAC7B,IAASzB,EAAImD,EAAGnD,EAAIoD,EAAGpD,IAAK,CAC3B,IAAIa,EAAQuF,EAAasC,EAAM1I,EAAE,GAAI,GACjCgF,EAAI5C,EAAIkF,YAAYzG,GAAOiC,MAE3B9C,EAAIT,EAAOkJ,IAAW,IACzBrG,EAAIgG,UAAYzD,EAAK/C,QAAQpB,OAAOK,MACpCuB,EAAIiG,SAASxH,EAAOtB,GAAQS,EAAIkF,EAAYnC,GAAQwE,EAASvC,EAAI,GAAIyC,EAAKJ,EAAa,IAIzF,IAAqB,IAAjB1C,EAAKhC,OAAe,CACnB3C,EAAIT,GAAQwD,EAAOwE,EAAS5C,EAAKhC,SAAW4E,EAASrC,IACzD9C,EAAIyF,YACJzF,EAAI0F,YAAc,OAClB1F,EAAI8E,UAAY,GAChB,IAAInC,EAAI/E,EAAIkF,EAAYqC,EAASxE,EAAOwE,EAMxC,IAAK,IAAI5B,KALTvD,EAAI2E,OAAOhC,EAAgB,EAAbsC,GACdjF,EAAI4F,OAAOjD,EAAGnB,GACdxB,EAAI6F,SAEJ7F,EAAI8E,UAAYA,EACCvF,EAAO,GAAIA,EAAMgE,GAAMiC,QAAS,CAC5CG,EAAQrC,EAAWjE,EAAMkE,GAC7BvD,EAAIyF,YACJzF,EAAI0F,YAAcrG,EAAKjB,OAAOmF,GAC9BvD,EAAIgG,UAAYzD,EAAK/C,QAAQpB,OAAOC,WAChCqE,EAAI2C,EAAKM,EAAM/H,EAAE,GAAKwH,EAC1BpF,EAAIuG,IAAI5D,EAAGD,EAAG,EAAG,EAAG,EAAE3F,KAAKyJ,IAAI,GAC/BxG,EAAIyG,OACJzG,EAAI6F,UArJP,SAAuB7F,EAAK2C,EAAGtD,EAAMmG,EAAS5H,EAAG8I,EAAcC,EAASC,EAAaC,EAAYxG,GAEhG,IACIyG,EAAOxD,EAAWjE,EAAM,KAAKzB,GAC7BmJ,EAAY/C,EAAa8C,EAAM,GAAK,KAAO9C,EAAa8C,EAAM,GAC9DE,EAAYhH,EAAIkF,YAAY6B,GAAWrG,MACvCuG,EAAM,GACNvG,EAAQ,EACZ,IAAK,IAAIwG,KAAO7H,EAAKE,MAChBiG,EAAQ0B,GAAK1B,UAChByB,EAAIC,GAAO,GACXD,EAAIC,GAAK3D,KAAOlE,EAAKE,MAAM2H,GAC3BD,EAAIC,GAAKC,MAAQ7D,EAAWjE,EAAM6H,GAAKtJ,GACvCqJ,EAAIC,GAAKxG,MAAQzD,EAAK+C,EAAIkF,YAAY+B,EAAIC,GAAK3D,MAAM7C,MAAOV,EAAIkF,YAAY+B,EAAIC,GAAKC,OAAOzG,OAC5FuG,EAAIC,GAAKE,MAAQ/H,EAAKjB,OAAO8I,GAC7BxG,GAASuG,EAAIC,GAAKxG,MAbZ,KAiBRiC,IADAjC,EAAQzD,EAAK+J,EAAWtG,GAhBhB,IAiBQ,GACR,IAAGiC,EAAI,GACCtC,EAAZsC,EAAIjC,IAAYiC,EAAItC,EAAKK,GAE7BV,EAAIgG,UAAYW,EAChB3G,EAAI0F,YAAckB,EAClB5G,EAAIyF,YACJjB,EAAiBxE,EAAK2C,EAAG,EAAGjC,EAAsB,EAAfgG,EAxB3B,GAwBiD,GAAGD,OAC5DzG,EAAI6F,SAEJ7F,EAAIgG,UAAYa,EAChB7G,EAAIyF,YACJzF,EAAIiG,SAASc,EAAWpE,EAAIjC,EAAM,EAAIsG,EAAU,EAAGN,EAAeW,GAElE,IAAIzE,EAAI,EAAG0E,EAAK3E,EACZzC,EAAOF,EAAIE,KACXyD,EAAOF,EAAWzD,EAAIE,KAAM,GAAG,GACnC,IAAKgH,KAAOD,EACXjH,EAAIgG,UAAYiB,EAAIC,GAAKE,MACzBxE,EAAIqE,EAAIC,GAAKxG,MACbV,EAAIE,KAAOyD,EACX3D,EAAIiG,SAASgB,EAAIC,GAAKC,MAAQG,EAtCvB,GAsC4C,EAAbZ,EAtC/B,IAuCP1G,EAAIE,KAAOA,EACXF,EAAIiG,SAASgB,EAAIC,GAAK3D,KAAQ+D,EAxCvB,GAwC4C,EAAbZ,EAxC/B,GAwCkD,KACzDY,EAAKA,EAAK1E,EAAI,GAEf5C,EAAIyG,OA2GHc,CAAcvH,EAAK2C,EAAGtD,EAAMkD,EAAKhD,MAAO3B,EAAE,EAAgB,IAAbqH,EAAmB1C,EAAK/C,QAAQpB,OAAOM,gBAAiB6D,EAAK/C,QAAQpB,OAAOE,QAASiE,EAAK/C,QAAQpB,OAAOK,MAAOiC,KAoE/J,SAAS8G,IACR,IAAIxH,EAAMV,KAAKU,IACfA,EAAIgG,UAAY1G,KAAKE,QAAQpB,OAAOC,WACpC2B,EAAIyH,SAAS,EAAG,EAAGnI,KAAKe,GAAIf,KAAKgB,IACjCN,EAAIE,KAAOZ,KAAKY,KACO,IAAnBZ,KAAKhB,QAAQ0C,IAChB6B,EAAavD,MACbA,KAAKoI,eAAe,QAAS,UAAWpI,KAAKqI,SAAQ,KAzCvD,SAAuBpF,GACtB,IAAIvC,EAAMuC,EAAKvC,IACfA,EAAIE,KAAOuD,EAAWlB,EAAKrC,KAAM,GACjC,IAAIb,EAAOkD,EAAKlD,KAChB2D,EAAiBT,EAAM,SAASc,EAAGF,GAClCnD,EAAIyF,YACJzF,EAAIgG,UAAYzD,EAAK/C,QAAQpB,OAAOE,QACpCkG,EAAiBxE,EAAKqD,EAAEV,EAAGU,EAAEX,EAAGW,EAAET,EAAGS,EAAE5C,EAAG4C,EAAE5C,EAAE,GAAGgG,OACjDzG,EAAI4H,aAAe,SACfrF,EAAKhD,MAAM4D,GAAKqC,SACnBxF,EAAIyF,YACJzF,EAAIgG,UAAY3G,EAAKjB,OAAO+E,GAC5BnD,EAAIuG,IAAIlD,EAAEV,EAAIU,EAAE5C,EAAE,EAAG4C,EAAEX,EAAEW,EAAE5C,EAAE,EAAG4C,EAAE5C,EAAE,EAAG,EAAG,EAAE1D,KAAKyJ,IAAI,GACrDxG,EAAIyG,OAEJzG,EAAIE,KAAOuD,EAAWlB,EAAKrC,KAAM,GAAG,GACpCF,EAAIyF,YACJzF,EAAIgG,UAAY,OAChBhG,EAAIiG,SAAS,IAAW5C,EAAEV,EAAQ,IAAJU,EAAE5C,EAAQ4C,EAAEX,EAAQ,IAAJW,EAAE5C,GAChDT,EAAIE,KAAOuD,EAAWlB,EAAKrC,KAAM,KAEjCF,EAAIyF,YACJzF,EAAI0F,YAAcrG,EAAKjB,OAAO+E,GAC9BnD,EAAIuG,IAAIlD,EAAEV,EAAIU,EAAE5C,EAAE,EAAG4C,EAAEX,EAAEW,EAAE5C,EAAE,EAAG4C,EAAE5C,EAAE,EAAG,EAAG,EAAE1D,KAAKyJ,IAAI,GACrDxG,EAAI6F,UAEL7F,EAAIgG,UAAY3G,EAAKjB,OAAO+E,GAC5BnD,EAAIyF,YACJzF,EAAIiG,SAAS5G,EAAKE,MAAM4D,GAAME,EAAEV,EAAIU,EAAE5C,EAAI4C,EAAEX,EAAIW,EAAE5C,EAAE,GACpDT,EAAI4H,aAAe,WAepBC,CAAcvI,MAzEf,SAAsBiD,GACrB,IAAIvC,EAAMuC,EAAKvC,IACX8H,EAAKvF,EAAK/C,QAAQrB,gBAClBC,EAASmE,EAAK/C,QAAQpB,OACtBiF,EAAIf,EAAgBC,GAExBvC,EAAIyF,YACJzF,EAAIgG,UAAY5H,EAAOE,QACvB0B,EAAIyH,SAAS,EAAGpE,EAAEX,EAAGW,EAAEV,EAAImF,EAAIzE,EAAE5C,GACjCT,EAAIyH,SAASpE,EAAEV,EAAIU,EAAET,EAAIkF,EAAIzE,EAAEX,EAAGH,EAAKlC,GAAKgD,EAAEV,EAAIU,EAAET,EAAIkF,EAAKzE,EAAE5C,GAE7DT,EAAIgG,UAAY5H,EAAOG,aACzBiG,EAAiBxE,EAAKqD,EAAEV,EAAcU,EAAEX,EAAGoF,EAAIzE,EAAE5C,EAAG,EAAG,CAAC,EAAE,EAAE,EAAE,IAC9D+D,EAAiBxE,EAAKqD,EAAEV,EAAIU,EAAET,EAAIkF,EAAIzE,EAAEX,EAAGoF,EAAIzE,EAAE5C,EAAG,EAAG,CAAC,EAAE,EAAE,EAAE,IAC9DT,EAAIyG,OAEJzG,EAAIyH,SAASpE,EAAEV,EAAImF,EAAIzE,EAAEX,EAAGW,EAAET,EAAK,EAAHkF,EAAM,GACtC9H,EAAIyH,SAASpE,EAAEV,EAAImF,EAAIzE,EAAEX,EAAEW,EAAE5C,EAAE,EAAG4C,EAAET,EAAK,EAAHkF,EAAM,GAE5ClD,EAAWrC,EAAKc,EAAEX,EAAGW,EAAE5C,GAAG,EAAO,GAAG,EAAO8B,EAAKoF,SAAQ,IAErC,IAAf1F,EAAMC,OACTlC,EAAIyF,YACJzF,EAAIgG,UAAY5H,EAAOI,YACtBwB,EAAIuG,IAAIlD,EAAEV,EAAI,CAAC,EAAGmF,EAAG,EAAGzE,EAAET,EAAEkF,EAAG,EAAGzE,EAAET,EAAE,GAAGX,EAAMC,MAAOmB,EAAEX,EAAIW,EAAE5C,EAAE,EAAG8B,EAAKtB,aAAa3C,QAAQW,IAAO,EAAG,EAAElC,KAAKyJ,IAAI,GACnHxG,EAAIyG,QAiDLsB,CAAazI,MAGbsF,EAAWtF,KAAM,EADTnC,EAAOmC,KAAKgB,GAAKhB,KAAKhB,QAAQgC,GAAKhB,KAAKkB,SAASF,KAClC,EAAM,GAAG,EAAMhB,KAAK2B,aAAaG,MAAMnC,KAE9D,IAAIoE,EAAI/D,KAAK2B,aAAaI,QAAQpC,IAC1B,EAAJoE,IACHrD,EAAIyF,YACJzF,EAAIgG,UAAY,2BAChBhG,EAAIuG,IAAIxE,EAAUC,EAAUqB,EAAK,EAAG,EAAEtG,KAAKyJ,IAAI,GACvC,GAAJnD,GAAQrD,EAAIuG,IAAIxE,EAAUC,EAAUqB,EAAE,GAAM,EAAG,EAAEtG,KAAKyJ,IAAI,GAC9DxG,EAAIyG,QAzTN,SAAsBuB,GACrB,IAAIC,GAAS,EACb,IAAK,IAAIf,KAAOc,EAAM,CACrB,IAAIE,EAAMF,EAAKd,GACfe,EAASA,GAAUC,EAAItJ,IAEnBsJ,EAAItJ,MACPsJ,EAAIjJ,IAAMiJ,EAAInJ,MAAQmJ,EAAIlJ,GAAKkJ,EAAInJ,MAAQmJ,EAAIrJ,UAAYsJ,YAAYC,MAAQF,EAAIpJ,KAC9EoJ,EAAIlJ,GAAKkJ,EAAInJ,MAAQmJ,EAAIjJ,KAAOiJ,EAAIlJ,IAAQkJ,EAAIlJ,GAAKkJ,EAAInJ,MAAQmJ,EAAIjJ,KAAOiJ,EAAIlJ,IAAOkJ,EAAIlJ,KAAOkJ,EAAInJ,QAC1GmJ,EAAItJ,KAAM,EACVsJ,EAAIjJ,IAAMiJ,EAAIlJ,GACVkJ,EAAIhJ,YAAYgJ,EAAIhJ,eAI3B,OAAO+I,EA6SHhH,CAAa3B,KAAK2B,eAAe3B,KAAKqC,OAM3CrC,KAAKqC,KAAO,WACX0G,sBAAsBb,EAAM5F,KAAKtC,QAGlCA,KAAKuC,KAAO,SAASyG,GACpB,IAAIjF,EAAIiF,EAAE9K,OAAO+K,wBACF,eAAXD,EAAEE,OAAuBF,EAAIA,EAAEG,cAAc,IACjD,IAAI9F,EAAI2F,EAAEI,QAAUrF,EAAE1C,KAAU2H,EAAEK,QAAUtF,EAAEuF,IACrCtJ,KAAKgB,GAAKhB,KAAKhB,QAAQgC,GAAKhB,KAAKkB,SAASF,KAClDhB,KAAKiB,OAASoC,EACdrD,KAAKqC,SAIPrC,KAAKwC,WAAa,SAASwG,GAC1B,IAAIrG,EAAMG,SAAUH,EAAMI,QAA1B,CACA,IAAIgB,EAAIiF,EAAE9K,OAAO+K,wBACbM,EAAQP,EAMZ,GALe,eAAXA,EAAEE,OAAuBF,EAAIA,EAAEG,cAAc,IACjD1G,EAAWuG,EAAEI,QAAUrF,EAAE1C,KACzBqB,EAAWsG,EAAEK,QAAUtF,EAAEuF,IAEzB3G,EAAMC,KA3WP,SAA4BK,EAAMI,EAAGD,GACpC,IAAIW,EAAIf,EAAgBC,GACpBuF,EAAKvF,EAAK/C,QAAQrB,gBACtB,OAAIuE,EAAIW,EAAEX,EAAU,EAChBU,EAAQT,EAAGD,EAAGW,GACbV,EAAIU,EAAEV,EAAImF,EAAW,EACrBnF,EAAIU,EAAEV,EAAIU,EAAET,EAAIkF,EAAW,EACxB,EAED,EAkWMgB,CAAmBxJ,KAAMyC,EAAUC,GAC/B,EAAbC,EAAMC,KACToG,EAAE9K,OAAOuL,MAAMC,OAAS,WACxB/G,EAAME,MAAQmG,EAAEI,QAChBzG,EAAMtB,KAAOrB,KAAKhB,QAAQqC,KAC1BsB,EAAMrB,MAAQtB,KAAKhB,QAAQsC,MAC3BqB,EAAMG,OA5UR,SAAkBkG,GACjBhJ,KAAKiB,QAAU,EACf,IAAImD,EAAQ,EACR4E,IACY,cAAXA,EAAEE,OAAsBF,EAAIA,EAAEG,cAAc,IAC/C/E,EAAQ4E,EAAEI,QAAUzG,EAAME,OAE5B,IAAIK,EAAKlD,KAAKhB,QACV2K,EAAS3J,KAAKE,QAAQrB,gBAET,EAAb8D,EAAMC,OAAUwB,GAASA,GACZ,EAAbzB,EAAMC,OACTM,EAAG7B,KAAOsB,EAAMtB,KAAO+C,EACvBlB,EAAG7B,KAAO1D,EAAKuF,EAAG7B,KAAM,GACxB6B,EAAG7B,KAAO7D,EAAK0F,EAAG7B,KAAM6B,EAAG5B,MAAiB,EAATqI,EAAa,IAEhC,EAAbhH,EAAMC,OACTM,EAAG5B,MAAQqB,EAAMrB,MAAQ8C,EACzBlB,EAAG5B,MAAQ9D,EAAK0F,EAAG5B,MAAOtB,KAAKe,GAAK,GACpCmC,EAAG5B,MAAQ3D,EAAKuF,EAAG5B,MAAO4B,EAAG7B,KAAgB,EAATsI,EAAa,IAElDpG,EAAavD,MACbA,KAAKoI,eAAe,QAAS,UAAWpI,KAAKqI,SAAQ,KAsT5B/F,KAAKtC,MAC7B2C,EAAMI,QApTR,SAAmBiG,GACF,cAAXA,EAAEE,OAAsBF,EAAE9K,OAAOuL,MAAMC,OAAO,WACnDzL,EAAQmC,SAAU,CAAC,YAAa,aAAcuC,EAAMG,QAAQ,GAC5D7E,EAAQmC,SAAU,CAAC,UAAW,YAAauC,EAAMI,SAAS,GAC1DJ,EAAMG,OAAS,KACfH,EAAMI,QAAU,KAChB/C,KAAKoI,eAAe,UAAW,UAAW,EAAG,WAAWzF,EAAMC,KAAO,KA8S1CN,KAAKtC,MAC/B/B,EAAQmC,SAAU,CAAC,YAAa,aAAcuC,EAAMG,QACpD7E,EAAQmC,SAAU,CAAC,UAAW,YAAauC,EAAMI,SACjD/C,KAAKoI,eAAe,UAAW,UAAWvK,EAAOmC,KAAKhB,QAAQgC,GAAK,QAC7D,CACN,IAAIiC,EAAOjD,KACX0D,EAAiB1D,KAAM,SAAS+D,EAAGF,GAC9BC,EAAQrB,EAAUC,EAAUqB,KAC/BwF,EAAMK,iBACN3G,EAAK4G,cAAchG,GACnBZ,EAAKmF,eAAe,UAAW,UAAW,GAAI,WAAcnF,EAAKtB,aAAaI,QAAQpC,IAAM,GAAG2C,KAAKW,UAOxGjD,KAAKgC,QAAU,SAASjC,GACvBC,KAAKD,KAAOA,EACZ,IACCC,KAAKyD,WAAa1D,EAAKmE,QAAQ,GAAG3F,OAAS,EAC1C,MAAOyK,GACR,MAAM,IAAIc,UAAU,gCAErB,IAAIpJ,EAAMV,KAAKU,IAKf,IAAK,IAAIqJ,KAJTrJ,EAAIE,KAAOuD,EAAWnE,KAAKY,KAAM,GAAG,GACpCZ,KAAKkB,SAASC,EAAItD,EAAoC,IAA7B6C,EAAIkF,YAAY,KAAKxE,OAC9CpB,KAAKkB,SAASE,MAAQ,EACtBpB,KAAKC,MAAQ,GACCF,EAAKE,MAAO,CACzB,IAAIqD,EAAI5C,EAAIkF,YAAY7F,EAAKE,MAAM8J,IAAI3I,MAAQpB,KAAKkB,SAASC,EAA2B,EAAvBnB,KAAKE,QAAQvB,QAC9EqB,KAAKkB,SAASE,OAASkC,EACvBtD,KAAKC,MAAM8J,GAAK,CACf7D,SAAS,EACT9E,MAAOkC,EAAItD,KAAKE,QAAQvB,SAG1BqB,KAAKoI,eAAe,QAAS,UAAWpI,KAAKqI,SAAQ,KAGtDrI,KAAK6J,cAAgB,SAAShG,EAAKmG,GAClChK,KAAKC,MAAM4D,GAAKqC,aAA0B,IAAR8D,GAAuBhK,KAAKC,MAAM4D,GAAKqC,QAAU8D,EACnFhK,KAAKoI,eAAe,QAAS,UAAWpI,KAAKqI,SAAQ,KAGtDrI,KAAKqI,QAAU,SAAS9C,GACvB,IAAI3H,EAAM,EACN6D,EAAI8D,EAAavF,KAAKhB,QAAQyC,EAAI,EAClCC,EAAI6D,EAAavF,KAAKhB,QAAQ0C,EAAI1B,KAAKyD,WAAa,EACxD,IAAK,IAAIQ,KAAQjE,KAAKC,MAAO,GAAID,KAAKC,MAAMgE,GAAMiC,QAEjD,IADA,IAAI+D,EAASjG,EAAWhE,KAAKD,KAAMkE,GAC1B3F,EAAImD,EAAGnD,GAAKoD,EAAGpD,IAAMV,EAAMD,EAAKC,EAAKqM,EAAO3L,EAAE,IAExD,OAAOV,GAGRoC,KAAKoI,eAAiB,SAASR,EAAKnI,EAAMC,EAAIE,GAC7C,IAAI8I,EAAO1I,KAAK2B,aACZiH,EAAMF,EAAKd,GACfgB,EAAInJ,KAAiB,YAATA,EAAoBmJ,EAAIjJ,IAAKF,EACzCmJ,EAAIjJ,IAAMiJ,EAAInJ,KACdmJ,EAAIlJ,GAAKA,EACTkJ,EAAIpJ,GAAKqJ,YAAYC,MACrBF,EAAIhJ,WAAaA,EACjB,IAAIsK,GAAU,EACd,IAAK,IAAIH,KAAKrB,EAAMwB,EAAUA,GAAWxB,EAAKqB,GAAGzK,IAC5C4K,GAASlK,KAAKqC,OACnBuG,EAAItJ,KAAM,KAIT6K,KAAKtK,EAAaiF,WAEC,oBAAXjE,SAAwBA,OAAOhB,aAAeA,GA3lBzD","sourcesContent":["(function() {\r\n\r\n'use strict'\r\n\r\nvar \r\n\t_min = Math.min, \r\n\t_max = Math.max,\r\n\t_round = Math.round,\r\n\t_abs = Math.abs\r\n\r\nfunction _listen(target, events, handler, listen) {\r\n\tfor (var i = 0; i < events.length; i++)\t\r\n\t\t(listen === false)\r\n\t\t? target.removeEventListener(events[i], handler)\r\n\t\t: target.addEventListener(events[i], handler)\r\n}\r\n\r\nvar defaults = {\r\n\tpadding: 5,\r\n\tminimapHeightRel: 0.14,\r\n\tminimapBandSize: 12,\r\n\tcolors: {\r\n\t\tbackground: '#fff',\r\n\t\tminimap: '#f8f8ff',\r\n\t\tminimapFrame: '#c8dde8',\r\n\t\tminimapDrag: 'rgba(200, 190, 190, 0.2)',\r\n\t\tlabel: '#666',\r\n\t\tlabelBackground: 'rgba(240, 240, 250, 0.82)'\r\n\t}\r\n}\r\n\r\nvar transition = {\r\n\trun: false,\r\n\tduration: 250,\r\n\tts: 0,\r\n\tfrom: 0,\r\n\tto: 0,\r\n\tpos: 0,\r\n\tonComplete: null\r\n}\r\n\r\n// ----------------------------------------------\r\n\r\nfunction VanillaChart(containerId, data) {\r\n/*\r\n\tthe data contract is:\r\n\t\tcolors: {y0: \"#3DC23F\", y1: \"#F34C44\"}\r\n\t\tcolumns: (3) [Array(113), Array(113), Array(113)]\r\n\t\tnames: {y0: \"#0\", y1: \"#1\"}\r\n\t\ttypes: {y0: \"line\", y1: \"line\", x: \"x\"}\r\n*/\r\n\tthis.data = null\r\n\tthis.names = {}\r\n\tthis.options = defaults\r\n\tthis.container = document.getElementById(containerId)\r\n\tif (!this.container) throw new Error('chart container not found!')\r\n\tthis.canvas = this.container.appendChild(document.createElement('canvas'))\r\n\tthis.ctx = this.canvas.getContext('2d')\r\n\tthis.ctx.font = window.getComputedStyle(this.container, null).font\r\n\tthis.font = this.ctx.font\r\n\tthis.vw = 0\r\n\tthis.vh = 0\r\n\tthis.select = -1\r\n\r\n\tthis.controls = {\r\n\t\th: 0,\r\n\t\tvh: 0,\r\n\t\twidth: 0\r\n\t}\r\n\r\n\tthis.minimap = {\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\trlLeft: 0.75,\r\n\t\trlRight: 1,\r\n\t\ta: 0,\r\n\t\tb: 0,\r\n\t\tvh: 0\r\n\t}\r\n\r\n\tthis._transitions = {\r\n\t\tminimap: Object.create(transition),\r\n\t\tgraph: Object.create(transition),\r\n\t\tpointer: Object.create(transition)\r\n\t}\r\n\r\n\tthis.setData(data)\r\n\r\n\tvar _justifySize = function() {\r\n\t\tthis.vw = this.canvas.width  = this.container.clientWidth\r\n\t\tthis.vh = this.canvas.height = this.container.clientHeight\r\n\t\tthis.minimap.left = _round(this.vw * this.minimap.rlLeft)\r\n\t\tthis.minimap.right = _round(this.vw * this.minimap.rlRight)\r\n\t\tthis.minimap.vh = _round(this.vh * this.options.minimapHeightRel)\r\n\t\tthis.controls.vh = (this.controls.h + this.options.padding*2) * (1 + Math.floor(this.controls.width/this.vw))\r\n\t\tthis.select = -1\r\n\t\tthis.draw()\r\n\t}\r\n\r\n\t_listen(window, ['resize','load'], _justifySize.bind(this))\r\n\t_listen(this.canvas, ['mousemove', 'toucmove'], this.move.bind(this))\r\n\t_listen(this.canvas, ['mousedown', 'touchstart'], this.mousetouch.bind(this))\r\n}\r\n\r\n(function() {\r\n\t// helpers (a spike of private data/methods ):\r\n\tvar pointerX = 0\r\n\tvar pointerY = 0\r\n\tvar _drag = {\r\n\t\tmode: 0,\r\n\t\tstart: 0,\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\trunBnd: null,\r\n\t\tdoneBnd: null\r\n\t}\r\n\t\r\n\tfunction _getMinimapRect(self) {\r\n\t\tvar mm = self.minimap\r\n\t\tvar margin = _round(mm.vh * 0.10)\r\n\t\treturn {\r\n\t\t\ty: self.vh - mm.vh + margin - self.controls.vh,\r\n\t\t\tx: mm.left,\r\n\t\t\tw: mm.right - mm.left,\r\n\t\t\th: mm.vh - margin * 2\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _calcMinimap(self) {\r\n\t\tif (self.vw === 0) return\r\n\t\tvar mm = self.minimap\r\n\t\tvar scaleView = self.vw / (self.dataLength - 1)\r\n\t\tmm.rlLeft = mm.left / self.vw\r\n\t\tmm.rlRight = mm.right / self.vw\r\n\t\tmm.a = _round(mm.left / scaleView)\r\n\t\tmm.b = _round(mm.right / scaleView)\r\n\t}\r\n\r\n\tfunction _iterateControls(self, cb) {\r\n\t\tvar pad = self.options.padding\r\n\t\tvar controls = self.controls\r\n\t\tvar names = self.names\r\n\t\tvar x = pad, i = 0\r\n\t\tvar y = self.vh - controls.vh + pad\r\n\t\tfor (var col in self.data.names) {\r\n\t\t\tif (x + names[col].width + pad > self.vw) {\r\n\t\t\t\tx = pad\r\n\t\t\t\ty = y + controls.h + pad\r\n\t\t\t}\r\n\t\t\tif (cb) cb({x: x, y: y, w: names[col].width, h: controls.h - pad}, col)\r\n\t\t\tx = x + names[col].width + pad\r\n\t\t\ti++\r\n\t\t}\r\n\t\treturn i\r\n\t}\r\n\r\n\tfunction _inRect(x, y, r) {\r\n\t\treturn (r.x <= x && x <= r.x + r.w && r.y <= y && y <= r.y + r.h)\r\n\t}\r\n\r\n\tfunction _getPointingRegion(self, x, y) {\r\n\t\tvar r = _getMinimapRect(self)\r\n\t\tvar sb = self.options.minimapBandSize\r\n\t\tif (y < r.y) return 7\r\n\t\tif (_inRect(x, y, r)) {\r\n\t\t\tif (x < r.x + sb)\treturn 1\r\n\t\t\tif (x > r.x + r.w - sb)\treturn 2\r\n\t\t\treturn 3\r\n\t\t}\r\n\t\treturn 0\r\n\t}\r\n\r\n\tfunction _getColumn(data, name) {\r\n\t\tfor (var i = 0; i < data.columns.length; i++) {\r\n\t\t\tif (data.columns[i][0] === name) return data.columns[i]\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\tfunction _transitions(trns) {\r\n\t\tvar result = false\r\n\t\tfor (var key in trns) {\r\n\t\t\tvar trn = trns[key]\r\n\t\t\tresult = result || trn.run\r\n\t\t\t// linear duration(ms) based transition \r\n\t\t\tif (trn.run) {\r\n\t\t\t\ttrn.pos = trn.from + (trn.to - trn.from) / trn.duration * (performance.now() - trn.ts) \r\n\t\t\t\tif ((trn.to > trn.from && trn.pos >= trn.to) || (trn.to < trn.from && trn.pos <= trn.to) || trn.to === trn.from  ) {\r\n\t\t\t\t\ttrn.run = false\r\n\t\t\t\t\ttrn.pos = trn.to\r\n\t\t\t\t\tif (trn.onComplete) trn.onComplete()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t} //_transitions\r\n\r\n\tfunction _dragRun(e) {\r\n\t\tthis.select = -1\r\n\t\tvar delta = 0\r\n\t\tif (e) {\r\n\t\t\tif (e.type === 'touchmove') e = e.targetTouches[0]\r\n\t\t \tdelta = e.clientX - _drag.start\r\n\t\t}\r\n\t\tvar mm = this.minimap\r\n\t\tvar sbSize = this.options.minimapBandSize\r\n\t\t\r\n\t\tif (_drag.mode & 4) delta = -delta //drag by body - reversal\r\n\t\tif (_drag.mode & 1) {\r\n\t\t\tmm.left = _drag.left + delta\r\n\t\t\tmm.left = _max(mm.left, 1)\r\n\t\t\tmm.left = _min(mm.left, mm.right - sbSize * 2 - 1)\r\n\t\t}\r\n\t\tif (_drag.mode & 2) {\r\n\t\t\tmm.right = _drag.right + delta \r\n\t\t\tmm.right = _min(mm.right, this.vw - 1)\r\n\t\t\tmm.right = _max(mm.right, mm.left + sbSize * 2 + 1)\r\n\t\t}\r\n\t\t_calcMinimap(this)\r\n\t\tthis.initTransition('graph', 'current', this.getMaxY(true) )\r\n\t}\r\n\r\n\tfunction _dragDone(e) {\r\n\t\t if (e.type !== 'touchmove') e.target.style.cursor='default'\r\n\t\t_listen(document, ['mousemove', 'touchmove'], _drag.runBnd, false)\r\n\t\t_listen(document, ['mouseup', 'touchend'], _drag.doneBnd, false)\r\n\t\t_drag.runBnd = null\r\n\t\t_drag.doneBnd = null\r\n\t\tthis.initTransition('minimap', 'current', 0, function(){_drag.mode = 0} )\r\n\t}\r\n\r\n\tfunction _fontShift(font, delta, bold) {\r\n\t\treturn font.replace(/(\\d*\\.?\\d+)px/, function(m, p1) {return (bold?'bold ':'') + Number(Number(p1)+delta)+'px' } )\r\n\t}\r\n\r\n\tfunction _getDateText(unixDate, part) {\r\n\t\treturn String.prototype.substr.apply((new Date(unixDate)), [[0, 3], [4, 11],\t[4, 6],\t[11, 4]][part])\r\n\t}\r\n\r\n\tfunction _drawRoundedRect(ctx, x, y, w, h, r, corners) {\r\n\t\tvar methods = ['arcTo', 'lineTo']\r\n\t\tcorners = corners || [0, 0, 0 ,0]\r\n\t\tctx.moveTo(x+r, y)\r\n\t\tctx[ methods[corners[0]] ](x+w, y,   x+w, y+h, r) \r\n\t\tctx[ methods[corners[1]] ](x+w, y+h, x,   y+h, r)\r\n\t\tctx[ methods[corners[2]] ](x,   y+h, x,   y,   r)\r\n\t\tctx[ methods[corners[3]] ](x,   y,   x+w, y,   r)\r\n\t\treturn ctx\r\n\t}\r\n\r\n\tfunction _drawLabelBox(ctx, x, data, visible, i, _labelHeight, bkColor, borderColor, labelColor, vw) {\r\n\t// displays info for 1, 2 and more named columns\r\n\t\tvar p = 10\r\n\t\tvar date = _getColumn(data, 'x')[i]\r\n\t\tvar dateLabel = _getDateText(date, 0) + ', ' + _getDateText(date, 2)\r\n\t\tvar dateWidth = ctx.measureText(dateLabel).width\r\n\t\tvar obj = {}\r\n\t\tvar width = 0\r\n\t\tfor (var key in data.names) {\r\n\t\t\tif (visible[key].visible) {\r\n\t\t\t\tobj[key] = {}\r\n\t\t\t\tobj[key].name = data.names[key]\r\n\t\t\t\tobj[key].value = _getColumn(data, key)[i]\r\n\t\t\t\tobj[key].width = _max(ctx.measureText(obj[key].name).width, ctx.measureText(obj[key].value).width)\r\n\t\t\t\tobj[key].color = data.colors[key]\r\n\t\t\t\twidth += obj[key].width + p\r\n\t\t\t}\r\n\t\t}\r\n\t\twidth = _max(dateWidth, width) + p\r\n\t\tx = x - width / 2\r\n\t\tif (x < 0) x = 0\r\n\t\tif (x + width > vw) x = vw - width\r\n\r\n\t\tctx.fillStyle = bkColor\r\n\t\tctx.strokeStyle = borderColor\r\n\t\tctx.beginPath()\r\n\t\t_drawRoundedRect(ctx, x, 1, width, _labelHeight * 3 + p, 6).fill()\r\n\t\tctx.stroke()\r\n\r\n\t\tctx.fillStyle = labelColor\r\n\t\tctx.beginPath()\r\n\t\tctx.fillText(dateLabel, x + width/2 - dateWidth/2, _labelHeight + p/2)\r\n\r\n\t\tvar w = 0, _x = x\r\n\t\tvar font = ctx.font\r\n\t\tvar bold = _fontShift(ctx.font, 2, true)\r\n\t\tfor (key in obj) {\r\n\t\t\tctx.fillStyle = obj[key].color\r\n\t\t\tw = obj[key].width\r\n\t\t\tctx.font = bold\r\n\t\t\tctx.fillText(obj[key].value , _x + p,\t_labelHeight*2 + p\t)\r\n\t\t\tctx.font = font\r\n\t\t\tctx.fillText(obj[key].name ,  _x + p,\t_labelHeight*3 + p/1.2)\r\n\t\t\t_x = _x + w + 10\r\n\t\t}\r\n\t\tctx.fill()\r\n\t}\r\n\r\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\tfunction _drawGraph(self, y, height, useMinimap, lineWidth, grid, maxY) {\r\n\r\n\t\tvar ctx = self.ctx\r\n\t\tvar symbolSize = ctx.measureText('M').width\r\n\t\tif (grid)\theight = height - symbolSize - 8\r\n\t\tvar data = self.data, \r\n\t\t\tnames = self.names;\r\n\r\n\t\tvar left = 0, \r\n\t\t\tright = self.vw,\r\n\t\t\ta = 0,\r\n\t\t\tb = self.dataLength-1;\r\n\t\tif (useMinimap) {\r\n\t\t\ta = self.minimap.a,\r\n\t\t\tb = self.minimap.b,\r\n\t\t\tleft = self.minimap.left, \r\n\t\t\tright = self.minimap.right\r\n\t\t}\r\n\t\tvar\twidth = self.vw,\r\n\t\t\tscaleView = width / (self.dataLength - 1),\r\n\t\t\trlLeft = left / width,\r\n\t\t\trlRight = right / width,\r\n\t\t\tscaleX = (1 / (rlRight - rlLeft)),\r\n\t\t\tscaleY = height / maxY,\r\n\t\t\tY0 = y + height,\r\n\t\t\tvisCount = 0;\r\n\r\n\t\tctx.lineWidth = lineWidth\r\n\t\tctx.lineJoin = 'round'\r\n\t\tctx.font = self.font\r\n\t\tfor (var name in names) if (names[name].visible) {\r\n\t\t\tvisCount++\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.strokeStyle = data.colors[name]\r\n\t\t\tvar dataY = _getColumn(data, name)\r\n\t\t\t// [a..b] - no need offscreen drawing\r\n\t\t\tfor (var i = a; i <= b; i++) ctx.lineTo(\r\n\t\t\t\t(i * scaleView - left) * scaleX,\r\n\t\t\t\tY0 - dataY[i + 1] * scaleY\r\n\t\t\t)\r\n\t\t\tctx.stroke()\r\n\t\t}\r\n\r\n\t\tif (grid && visCount === 0) {\r\n\t\t\tvar msg = 'No data to display'\r\n\t\t\tvar msgWidth = ctx.measureText(msg).width\r\n\t\t\tctx.fillStyle = self.options.colors.label\r\n\t\t\tctx.font = _fontShift(ctx.font, 4, false)\r\n\t\t\tctx.fillText(msg, width/2-msgWidth/2 , height/2)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (!grid ) return\r\n\t\t//-------------------------Y - lines / labels\r\n\t\tctx.lineWidth = 0.2\r\n\t\tctx.beginPath()\r\n\t\tctx.strokeStyle = 'grey'\r\n\t\tvar stepY = maxY / 8\r\n\t\tctx.fillStyle = self.options.colors.label\r\n\t\tfor (var y = 0; y < 8; y++) {\r\n\t\t\tctx.moveTo(0, Y0 - y * stepY * scaleY)\r\n\t\t\tctx.lineTo(width, Y0 - y * stepY * scaleY)\r\n\t\t\tctx.fillText(_round(y * stepY).toString(), 5, Y0 - y * stepY  * scaleY )\r\n\t\t}\r\n\t\tctx.stroke()\r\n\r\n\t\t//-------------------------X - labels\r\n\t\tvar labelSize = symbolSize * 8\r\n\t\tvar dense =  _max(_abs(b - a) / width * labelSize, 1)\r\n\r\n\t\tvar dataX = _getColumn(data, 'x')\r\n\t\tfor (var i = a; i < b; i++) {\r\n\t\t\tvar label = _getDateText(dataX[i+1], 2)\r\n\t\t\tvar w = ctx.measureText(label).width\r\n\r\n\t\t\tif (i % _round(dense) === 0) {\r\n\t\t\t\tctx.fillStyle = self.options.colors.label\r\n\t\t\t\tctx.fillText(label, _round((i * scaleView - left) * scaleX - w / 2),\tY0 + symbolSize + 6)\r\n\t\t\t}\t\r\n\t\t}\r\n\t\t//-------------------------Selection\r\n\t\tif (self.select !== -1) {\r\n\t\t\tvar i = _round((left * scaleX + self.select) / (scaleX * scaleView))\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.strokeStyle = 'grey'\r\n\t\t\tctx.lineWidth = 0.5\r\n\t\t\tvar x = i * scaleView * scaleX - left * scaleX\r\n\t\t\tctx.moveTo(x, symbolSize * 5)\r\n\t\t\tctx.lineTo(x, height)\r\n\t\t\tctx.stroke()\r\n\r\n\t\t\tctx.lineWidth = lineWidth\r\n\t\t\tfor (var name in names) if (names[name].visible) {\r\n\t\t\t\tvar dataY = _getColumn(data, name)\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.strokeStyle = data.colors[name]\r\n\t\t\t\tctx.fillStyle = self.options.colors.background\r\n\t\t\t\tvar y = Y0 - dataY[i+1] * scaleY\r\n\t\t\t\tctx.arc(x, y, 4, 0, 2*Math.PI, false)\r\n\t\t\t\tctx.fill()\r\n\t\t\t\tctx.stroke()\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t_drawLabelBox(ctx, x, data, self.names, i+1, symbolSize * 1.4,  self.options.colors.labelBackground, self.options.colors.minimap ,self.options.colors.label, width)\r\n\t\t}\r\n\r\n\t}\t// _drawGraph\r\n\r\n\tfunction _drawMinimap(self) {\r\n\t\tvar ctx = self.ctx\r\n\t\tvar sb = self.options.minimapBandSize\r\n\t\tvar colors = self.options.colors\r\n\t\tvar r = _getMinimapRect(self)\r\n\r\n\t\tctx.beginPath()\r\n\t\tctx.fillStyle = colors.minimap\r\n\t\tctx.fillRect(0, r.y, r.x + sb, r.h)\r\n\t\tctx.fillRect(r.x + r.w - sb, r.y, self.vw - r.x - r.w + sb , r.h)\r\n\r\n   \tctx.fillStyle = colors.minimapFrame\r\n\t\t_drawRoundedRect(ctx, r.x,            r.y, sb, r.h, 6, [1,1,0,0])\r\n\t\t_drawRoundedRect(ctx, r.x + r.w - sb, r.y, sb, r.h, 6, [0,0,1,1])\r\n\t\tctx.fill()\r\n\r\n\t\tctx.fillRect(r.x + sb, r.y, r.w-sb*2, 2)\r\n\t\tctx.fillRect(r.x + sb, r.y+r.h-2, r.w-sb*2, 2)\r\n\r\n\t\t_drawGraph(self,r.y, r.h, false, 1, false, self.getMaxY(false))\r\n\t\t//animation\r\n\t\tif (_drag.mode !== 0) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.fillStyle = colors.minimapDrag\r\n\t\t \tctx.arc(r.x + [0, sb/2, r.w-sb/2, r.w/2][_drag.mode], r.y + r.h/2, self._transitions.minimap.pos,   0, 2*Math.PI, false)\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _drawControls(self) {\r\n\t\tvar ctx = self.ctx\r\n\t\tctx.font = _fontShift(self.font, 4)\r\n\t\tvar data = self.data\r\n\t\t_iterateControls(self, function(r, col){\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.fillStyle = self.options.colors.minimap\r\n\t\t\t_drawRoundedRect(ctx, r.x, r.y, r.w, r.h, r.h/2).fill()\r\n\t\t\tctx.textBaseline = 'middle'\r\n\t\t\tif (self.names[col].visible) {\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.fillStyle = data.colors[col]\r\n\t\t\t\tctx.arc(r.x + r.h/2, r.y+r.h/2, r.h/3, 0, 2*Math.PI, false)\r\n\t\t\t\tctx.fill()\r\n\r\n\t\t\t\tctx.font = _fontShift(self.font, 4, true)\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.fillStyle = '#fff'\r\n\t\t\t\tctx.fillText('\\u2713' , r.x + r.h*0.33, r.y + r.h*0.52)\r\n\t\t\t\tctx.font = _fontShift(self.font, 4)\r\n\t\t\t} else {\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.strokeStyle = data.colors[col]\r\n\t\t\t\tctx.arc(r.x + r.h/2, r.y+r.h/2, r.h/3, 0, 2*Math.PI, false)\r\n\t\t\t\tctx.stroke()\r\n\t\t\t}\r\n\t\t\tctx.fillStyle = data.colors[col]\r\n\t\t\tctx.beginPath()\t\r\n\t\t\tctx.fillText(data.names[col], r.x + r.h , r.y + r.h/2)\r\n\t\t\tctx.textBaseline = 'bottom'\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tfunction _draw() {\r\n\t\tvar ctx = this.ctx\r\n\t\tctx.fillStyle = this.options.colors.background\r\n\t\tctx.fillRect(0, 0, this.vw, this.vh)\r\n\t\tctx.font = this.font\r\n\t\tif (this.minimap.b === 0 ) {\r\n\t\t\t_calcMinimap(this)\r\n\t\t\tthis.initTransition('graph', 'current', this.getMaxY(true) )\r\n\t\t}\r\n\r\n\t\t_drawControls(this)\r\n\t\t_drawMinimap(this)\r\n\t\r\n\t\tvar h = _round(this.vh - this.minimap.vh - this.controls.vh)\r\n\t\t_drawGraph(this, 0, h, true, 2, true, this._transitions.graph.pos)\r\n\t\t\r\n\t\tvar r = this._transitions.pointer.pos\r\n\t\tif (r > 0) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.fillStyle = 'rgba(200, 190, 190, 0.2)'\r\n\t\t\tctx.arc(pointerX, pointerY, r,   0, 2*Math.PI, false)\r\n\t\t\tif (r > 12)\tctx.arc(pointerX, pointerY, r-12,   0, 2*Math.PI, true)\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t\t\r\n\t\tif (_transitions(this._transitions)) this.draw() // -- re-call while transitions running\r\n\t}\r\n\t// helpers end\r\n\r\n\t//--------------------------------------------------------------------------------------\r\n\t// VanillaChart.prototype methods:\r\n\tthis.draw = function() {\r\n\t\trequestAnimationFrame(_draw.bind(this))\r\n\t}\r\n\r\n\tthis.move = function(e) {\r\n\t\tvar r = e.target.getBoundingClientRect()\r\n\t\tif (e.type === 'touchstart') e = e.targetTouches[0]\r\n\t\tvar x = e.clientX - r.left, y = e.clientY - r.top\r\n\t\tif (y < (this.vh - this.minimap.vh - this.controls.vh)) {\r\n\t\t\tthis.select = x\r\n\t\t\tthis.draw()\r\n\t\t}\r\n\t}\r\n\r\n\tthis.mousetouch\t= function(e) {\r\n\t\tif (_drag.runBnd || _drag.doneBnd) return\r\n\t\tvar r = e.target.getBoundingClientRect()\r\n\t\tvar event = e\r\n\t\tif (e.type === 'touchstart') e = e.targetTouches[0]\r\n\t\tpointerX = e.clientX - r.left\r\n\t\tpointerY = e.clientY - r.top\r\n\t\t\r\n\t\t_drag.mode = _getPointingRegion(this, pointerX, pointerY)\r\n\t\tif (_drag.mode > 0) {\r\n\t\t\te.target.style.cursor = 'w-resize'\r\n\t\t\t_drag.start = e.clientX\r\n\t\t\t_drag.left = this.minimap.left\r\n\t\t\t_drag.right = this.minimap.right\r\n\t\t\t_drag.runBnd = _dragRun.bind(this)\r\n\t\t\t_drag.doneBnd = _dragDone.bind(this)\r\n\t\t\t_listen(document, ['mousemove', 'touchmove'], _drag.runBnd)\r\n\t\t\t_listen(document, ['mouseup', 'touchend'], _drag.doneBnd)\r\n\t\t\tthis.initTransition('minimap', 'current', _round(this.minimap.vh / 2) )\r\n\t\t} else {\r\n\t\t\tvar self = this\r\n\t\t\t_iterateControls(this, function(r, col){\r\n\t\t\t\tif (_inRect(pointerX, pointerY, r)) {\r\n\t\t\t\t\tevent.preventDefault()\r\n\t\t\t\t\tself.setVisibility(col)\r\n\t\t\t\t\tself.initTransition('pointer', 'current', 50, function () { self._transitions.pointer.pos = 0}.bind(self)  )\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setData = function(data) {\r\n\t\tthis.data = data\r\n\t\ttry {\r\n\t\t\tthis.dataLength = data.columns[0].length - 1\r\n\t\t}\tcatch (e)\t{\r\n\t\t\tthrow new TypeError('incorrect <inputData> format')\r\n\t\t}\r\n\t\tvar ctx = this.ctx\r\n\t\tctx.font = _fontShift(this.font, 4, true)\r\n\t\tthis.controls.h = _round(ctx.measureText('M').width * 3.5)\r\n\t\tthis.controls.width = 0\r\n\t\tthis.names = {}\r\n\t\tfor (var k in data.names)\t{\r\n\t\t\tvar w = ctx.measureText(data.names[k]).width + this.controls.h + this.options.padding * 2\r\n\t\t\tthis.controls.width += w\r\n\t\t\tthis.names[k] = {\r\n\t\t\t\tvisible: true, // visible by default\r\n\t\t\t\twidth: w - this.options.padding\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.initTransition('graph', 'current', this.getMaxY(true) )\r\n\t}\r\n\r\n\tthis.setVisibility = function(col, vis) {\r\n\t\tthis.names[col].visible = (typeof vis === 'undefined')? !this.names[col].visible : vis\r\n\t\tthis.initTransition('graph', 'current', this.getMaxY(true) )\r\n\t}\r\n\r\n\tthis.getMaxY = function(useMinimap) {\r\n\t\tvar max = 0\r\n\t\tvar a = useMinimap ? this.minimap.a : 0\r\n\t\tvar b = useMinimap ? this.minimap.b : this.dataLength - 1\r\n\t\tfor (var name in this.names) if (this.names[name].visible) {\r\n\t\t\tvar column = _getColumn(this.data, name)\r\n\t\t\tfor (var i = a; i <= b; i++)  max = _max(max, column[i+1])\r\n\t\t}\r\n\t\treturn max\r\n\t}\r\n\r\n\tthis.initTransition = function(key, from, to, onComplete) {\r\n\t\tvar trns = this._transitions\r\n\t\tvar trn = trns[key]\r\n\t\ttrn.from = (from === 'current')?trn.pos: from\r\n\t\ttrn.pos = trn.from\r\n\t\ttrn.to = to\r\n\t\ttrn.ts = performance.now()\r\n\t\ttrn.onComplete = onComplete\r\n\t\tvar running = false\r\n\t\tfor (var k in trns) running = running || trns[k].run\r\n\t\tif (!running) this.draw()\r\n\t\ttrn.run = true\r\n\t}\r\n\r\n\r\n}).call(VanillaChart.prototype)\r\n\r\nif (typeof window !== 'undefined') window.VanillaChart = VanillaChart\r\n\r\n})()\r\n"]}