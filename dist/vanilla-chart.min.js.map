{"version":3,"sources":["./src/vanilla-chart.js"],"names":["_min","Math","min","_max","max","_round","round","_abs","abs","_listen","target","events","handler","listen","i","length","removeEventListener","addEventListener","defaults","padding","minimapHeightRel","minimapBandSize","colors","background","minimap","minimapFrame","minimapDrag","label","transition","run","duration","ts","from","to","pos","onComplete","VanillaChart","containerId","data","this","names","options","container","document","getElementById","Error","canvas","appendChild","createElement","ctx","getContext","font","window","getComputedStyle","vw","vh","select","controls","h","width","left","right","rlLeft","rlRight","_transitions","Object","create","graph","pointer","setData","clientWidth","height","clientHeight","floor","draw","bind","move","mousetouch","pointerX","pointerY","_drag","mode","start","runBnd","doneBnd","_getMinimapRect","self","mm","margin","y","x","w","_iterateControls","cb","pad","col","_inRect","r","_getColumn","name","columns","_fontShift","delta","bold","replace","m","p1","Number","_getDateText","unixDate","part","String","prototype","substr","apply","Date","_drawRoundedRect","corners","methods","moveTo","_drawGraph","useMinimap","lineWidth","grid","maxY","symbolSize","measureText","scaleView","dataLength","a","b","scaleX","scaleY","Y0","visCount","lineJoin","visible","beginPath","strokeStyle","dataY","lineTo","stroke","msg","msgWidth","fillStyle","fillText","stepY","toString","labelSize","dense","dataX","arc","PI","fill","_labelHeight","bkColor","borderColor","labelColor","date","dateLabel","dateWidth","obj","key","value","color","p","_x","_drawLabelBox","_draw","fillRect","sb","getMaxY","_drawMinimap","textBaseline","_drawControls","trns","result","trn","performance","now","requestAnimationFrame","e","getBoundingClientRect","type","targetTouches","clientX","clientY","top","event","_getPointingRegion","style","cursor","sbSize","initTransition","preventDefault","setVisibility","TypeError","k","vis","column","running","call"],"mappings":"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","sourcesContent":["(function() {\r\n\r\n'use strict'\r\n\r\nvar \r\n\t_min = Math.min, \r\n\t_max = Math.max,\r\n\t_round = Math.round,\r\n\t_abs = Math.abs\r\n\r\nfunction _listen(target, events, handler, listen) {\r\n\tfor (var i = 0; i < events.length; i++)\t\r\n\t\t(listen === false)\r\n\t\t? target.removeEventListener(events[i], handler)\r\n\t\t: target.addEventListener(events[i], handler)\r\n}\r\n\r\nvar defaults = {\r\n\tpadding: 10,\r\n\tminimapHeightRel: 0.14,\r\n\tminimapBandSize: 12,\r\n\tcolors: {\r\n\t\tbackground: '#fff',\r\n\t\tminimap: '#f8f8ff',\r\n\t\tminimapFrame: '#c8dde8',\r\n\t\tminimapDrag: 'rgba(200, 190, 190, 0.2)',\r\n\t\tlabel: '#aaa'\r\n\t}\r\n}\r\n\r\nvar transition = {\r\n\trun: false,\r\n\tduration: 250,\r\n\tts: 0,\r\n\tfrom: 0,\r\n\tto: 0,\r\n\tpos: 0,\r\n\tonComplete: null\r\n}\r\n\r\n// ----------------------------------------------\r\n\r\nfunction VanillaChart(containerId, data) {\r\n/*\r\n\tcolors: {y0: \"#3DC23F\", y1: \"#F34C44\"}\r\n\tcolumns: (3) [Array(113), Array(113), Array(113)]\r\n\tnames: {y0: \"#0\", y1: \"#1\"}\r\n\ttypes: {y0: \"line\", y1: \"line\", x: \"x\"}\r\n*/\r\n\tthis.data = null\r\n\tthis.names = {}\r\n\tthis.options = defaults\r\n\tthis.container = document.getElementById(containerId)\r\n\tif (!this.container) throw new Error('chart container not found!')\r\n\tthis.canvas = this.container.appendChild(document.createElement('canvas'))\r\n\tthis.ctx = this.canvas.getContext('2d')\r\n\tthis.ctx.font = window.getComputedStyle(this.container, null).font\r\n\tthis.font = this.ctx.font\r\n\tthis.vw = 0\r\n\tthis.vh = 0\r\n\tthis.select = -1\r\n\r\n\tthis.controls = {\r\n\t\th: 0,\r\n\t\tvh: 0,\r\n\t\twidth: 0\r\n\t}\r\n\r\n\tthis.minimap = {\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\trlLeft: 0.75,\r\n\t\trlRight: 1,\r\n\t\tvh: 0\r\n\t}\r\n\r\n\tthis._transitions = {\r\n\t\tminimap: Object.create(transition),\r\n\t\tgraph: Object.create(transition),\r\n\t\tpointer: Object.create(transition)\r\n\t}\r\n\r\n\tthis.setData(data)\r\n\r\n\t// handling events:\r\n\tvar _justifySize = function() {\r\n\t\tthis.vw = this.canvas.width  = this.container.clientWidth\r\n\t\tthis.vh = this.canvas.height = this.container.clientHeight\r\n\t\tthis.minimap.left = _round(this.vw * this.minimap.rlLeft)\r\n\t\tthis.minimap.right = _round(this.vw * this.minimap.rlRight)\r\n\t\tthis.minimap.vh = _round(this.vh * this.options.minimapHeightRel)\r\n\t\tthis.controls.vh = _round(this.vh * 0.15) * (1 + Math.floor((this.controls.width + this.controls.h)/this.vw))\r\n\t\tthis.select = -1\r\n\t\tthis.draw()\r\n\t}\r\n\r\n\t_listen(window, ['resize','load'], _justifySize.bind(this))\r\n\t_listen(this.canvas, ['mousemove', 'toucmove'], this.move.bind(this))\r\n\t_listen(this.canvas, ['mousedown', 'touchstart'], this.mousetouch.bind(this))\r\n\t\r\n}\r\n\r\n(function() {\r\n\t// helpers (a spike of private data/methods ):\r\n\tvar pointerX = 0\r\n\tvar pointerY = 0\r\n\tvar _drag = {\r\n\t\tmode: 0,\r\n\t\tstart: 0,\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\trunBnd: null,\r\n\t\tdoneBnd: null\r\n\t}\r\n\t\r\n\tfunction _getMinimapRect(self) {\r\n\t\tvar mm = self.minimap\r\n\t\tvar margin = _round(mm.vh * 0.10)\r\n\t\treturn {\r\n\t\t\ty: self.vh - mm.vh + margin - self.controls.vh,\r\n\t\t\tx: mm.left,\r\n\t\t\tw: mm.right - mm.left,\r\n\t\t\th: mm.vh - margin * 2\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _iterateControls(self, cb) {\r\n\t\tvar pad = self.options.padding\r\n\t\tvar controls = self.controls\r\n\t\tvar names = self.names\r\n\t\tvar x = pad, i = 1\r\n\t\tvar y = self.vh - controls.vh + pad\r\n\t\tfor (var col in self.data.names) {\r\n\t\t\tif (x + names[col].width > self.vw - pad) {\r\n\t\t\t\tx = pad\r\n\t\t\t\ty = y + controls.h + pad\r\n\t\t\t}\r\n\t\t\tcb({x: x, y: y, w: names[col].width, h: controls.h}, col)\r\n\t\t\tx = x + names[col].width + pad\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _inRect(x, y, r) {\r\n\t\treturn (r.x <= x && x <= r.x + r.w && r.y <= y && y <= r.y + r.h)\r\n\t}\r\n\r\n\tfunction _getPointingRegion(self, x, y) {\r\n\t\tvar r = _getMinimapRect(self)\r\n\t\tvar sb = self.options.minimapBandSize\r\n\t\tif (y < r.y) return 7\r\n\t\tif (_inRect(x, y, r)) {\r\n\t\t\tif (x < r.x + sb)\treturn 1\r\n\t\t\tif (x > r.x + r.w - sb)\treturn 2\r\n\t\t\treturn 3\r\n\t\t}\r\n\t\treturn 0\r\n\t}\r\n\r\n\tfunction _getColumn(data, name) {\r\n\t\tfor (var i = 0; i < data.columns.length; i++) {\r\n\t\t\tif (data.columns[i][0] === name) return data.columns[i]\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\tfunction _transitions(trns) {\r\n\t\tvar result = false\r\n\t\tfor (var key in trns) {\r\n\t\t\tvar trn = trns[key]\r\n\t\t\tresult = result || trn.run\r\n\t\t\t// linear duration(ms) based transition \r\n\t\t\tif (trn.run) {\r\n\t\t\t\ttrn.pos = trn.from + (trn.to - trn.from) / trn.duration * (performance.now() - trn.ts) \r\n\t\t\t\tif ((trn.to > trn.from && trn.pos >= trn.to) || (trn.to < trn.from && trn.pos <= trn.to) || trn.to === trn.from  ) {\r\n\t\t\t\t\ttrn.run = false\r\n\t\t\t\t\ttrn.pos = trn.to\r\n\t\t\t\t\tif (trn.onComplete) trn.onComplete()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t} //_transitions\r\n\r\n\tfunction _dragRun(e) {\r\n\t\tthis.select = -1\r\n\t\tif (e.type === 'touchmove') e = e.targetTouches[0]\r\n\t\tvar delta = e.clientX - _drag.start\r\n\t\tvar mm = this.minimap\r\n\t\tvar sbSize = this.options.minimapBandSize\r\n\r\n\t\tif (_drag.mode & 4) delta = -delta //drag by body - reversal\r\n\t\tif (_drag.mode & 1) {\r\n\t\t\tmm.left = _drag.left + delta\r\n\t\t\tmm.left = _max(mm.left, 1)\r\n\t\t\tmm.left = _min(mm.left, mm.right - sbSize * 2 - 1)\r\n\t\t}\r\n\t\tif (_drag.mode & 2) {\r\n\t\t\tmm.right = _drag.right + delta \r\n\t\t\tmm.right = _min(mm.right, this.vw - 1)\r\n\t\t\tmm.right = _max(mm.right, mm.left + sbSize * 2 + 1)\r\n\t\t}\r\n\t\tmm.rlLeft = mm.left / this.vw\r\n\t\tmm.rlRight = mm.right / this.vw\r\n\r\n\t\tvar scaleView = this.vw / (this.dataLength - 1)\r\n\t\tvar a = _round(mm.left / scaleView) // a, b == 0..dataLength\r\n\t\tvar b = _round(mm.right / scaleView)\r\n\t\tthis.initTransition('graph', 'current', this.getMaxY(a, b) )\r\n\t}\r\n\r\n\tfunction _dragDone(e) {\r\n\t\t if (e.type !== 'touchmove') e.target.style.cursor='default'\r\n\t\t_listen(document, ['mousemove', 'touchmove'], _drag.runBnd, false)\r\n\t\t_listen(document, ['mouseup', 'touchend'], _drag.doneBnd, false)\r\n\t\t_drag.runBnd = null\r\n\t\t_drag.doneBnd = null\r\n\t\tthis.initTransition('minimap', 'current', 0, function(){_drag.mode = 0} )\r\n\t}\r\n\r\n\tfunction _fontShift(font, delta, bold) {\r\n\t\treturn font.replace(/(\\d*\\.?\\d+)px/, function(m, p1) {return (bold?'bold ':'') + Number(Number(p1)+delta)+'px' } )\r\n\t}\r\n\r\n\tfunction _getDateText(unixDate, part) {\r\n\t\treturn String.prototype.substr.apply((new Date(unixDate)), [[0, 3], [4, 11],\t[4, 6],\t[11, 4]][part])\r\n\t}\r\n\r\n\tfunction _drawRoundedRect(ctx, x, y, w, h, r, corners) {\r\n\t\tvar methods = ['arcTo', 'lineTo']\r\n\t\tcorners = corners || [0, 0, 0 ,0]\r\n\t\tctx.moveTo(x+r, y)\r\n\t\tctx[ methods[corners[0]] ](x+w, y,   x+w, y+h, r) \r\n\t\tctx[ methods[corners[1]] ](x+w, y+h, x,   y+h, r)\r\n\t\tctx[ methods[corners[2]] ](x,   y+h, x,   y,   r)\r\n\t\tctx[ methods[corners[3]] ](x,   y,   x+w, y,   r)\r\n\t\treturn ctx\r\n\t}\r\n\r\n\tfunction _drawLabelBox(ctx, x, data, visible, i, _labelHeight, bkColor, borderColor, labelColor, vw) {\r\n\t// displays info for 1, 2 and more named columns\r\n\t\tvar p = 10\r\n\t\tvar date = _getColumn(data, 'x')[i]\r\n\t\tvar dateLabel = _getDateText(date, 0) + ', ' + _getDateText(date, 2)\r\n\t\tvar dateWidth = ctx.measureText(dateLabel).width\r\n\t\tvar obj = {}\r\n\t\tvar width = 0\r\n\t\tfor (var key in data.names) {\r\n\t\t\tif (visible[key].visible) {\r\n\t\t\t\tobj[key] = {}\r\n\t\t\t\tobj[key].name = data.names[key]\r\n\t\t\t\tobj[key].value = _getColumn(data, key)[i]\r\n\t\t\t\tobj[key].width = _max(ctx.measureText(obj[key].name).width, ctx.measureText(obj[key].value).width)\r\n\t\t\t\tobj[key].color = data.colors[key]\r\n\t\t\t\twidth += obj[key].width + p\r\n\t\t\t}\r\n\t\t}\r\n\t\twidth = _max(dateWidth, width) + p\r\n\t\tx = x - width / 2\r\n\t\tif (x < 0) x = 0\r\n\t\tif (x + width > vw) x = vw - width\r\n\r\n\t\tctx.fillStyle = bkColor\r\n\t\tctx.strokeStyle = borderColor\r\n\t\tctx.beginPath()\r\n\t\t_drawRoundedRect(ctx, x, 1, width, _labelHeight * 3 + p, 6).fill()\r\n\t\tctx.stroke()\r\n\r\n\t\tctx.fillStyle = labelColor\r\n\t\tctx.beginPath()\r\n\t\tctx.fillText(dateLabel, x + width/2 - dateWidth/2, _labelHeight + p/4)\r\n\r\n\t\tvar w = 0, _x = x\r\n\t\tvar font = ctx.font\r\n\t\tvar bold = _fontShift(ctx.font, 2, true)\r\n\t\tfor (key in obj) {\r\n\t\t\tctx.fillStyle = obj[key].color\r\n\t\t\tw = obj[key].width\r\n\t\t\tctx.font = bold\r\n\t\t\tctx.fillText(obj[key].value , _x + p,\t_labelHeight*2 + p/4)\r\n\t\t\tctx.font = font\r\n\t\t\tctx.fillText(obj[key].name ,  _x + p,\t_labelHeight*3 + p/4)\r\n\t\t\t_x = _x + w + 10\r\n\t\t}\r\n\t\tctx.fill()\r\n\t}\r\n\r\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\tfunction _drawGraph(self, y, height, useMinimap, lineWidth, grid, maxY) {\r\n\r\n\t\tvar ctx = self.ctx\r\n\t\tvar symbolSize = ctx.measureText('M').width\r\n\t\tif (grid)\theight = height - symbolSize - 8\r\n\t\tvar data = self.data, \r\n\t\t\t\tnames = self.names;\r\n\r\n\t\tvar width = self.vw,\r\n\t\t\t\tscaleView = width / (self.dataLength - 1),\r\n\t\t\t\tleft = 0, \r\n\t\t\t\tright = self.vw,\r\n\t\t\t\ta = 0,\r\n\t\t\t\tb = self.dataLength;\r\n\r\n\t\tif (useMinimap) {\r\n\t\t\tleft = self.minimap.left\r\n\t\t\tright = self.minimap.right\r\n\t\t\ta = _round(left / scaleView)\r\n\t\t\tb = _round(right / scaleView)\r\n\t\t}\r\n\t\t\r\n\t\tvar rlLeft = left / width,\r\n\t\t\t\trlRight = right / width,\r\n\t\t\t\tscaleX = (1 / (rlRight - rlLeft)),\r\n\t\t\t\tscaleY = height / maxY,\r\n\t\t\t\tY0 = y + height,\r\n\t\t\t\tvisCount = 0;\r\n\t\t\r\n\t\tctx.lineWidth = lineWidth\r\n\t\tctx.lineJoin = 'round'\r\n\t\tctx.font = self.font\r\n\t\tfor (var name in names) if (names[name].visible) {\r\n\t\t\tvisCount++\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.strokeStyle = data.colors[name]\r\n\t\t\tvar dataY = _getColumn(data, name)\r\n\t\t\t// [a..b] - no need offscreen drawing\r\n\t\t\tfor (var i = a; i <= b; i++) ctx.lineTo(\r\n\t\t\t\t(i * scaleView - left) * scaleX,\r\n\t\t\t\tY0 - dataY[i + 1] * scaleY\r\n\t\t\t)\r\n\t\t\tctx.stroke()\r\n\t\t}\r\n\r\n\t\tif (grid && visCount === 0) {\r\n\t\t\tvar msg = 'No data to display'\r\n\t\t\tvar msgWidth = ctx.measureText(msg).width\r\n\t\t\tctx.fillStyle = self.options.colors.label\r\n\t\t\tctx.font = _fontShift(ctx.font, 4, false)\r\n\t\t\tctx.fillText(msg, width/2-msgWidth/2 , height/2)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (!grid ) return\r\n\t\t//-------------------------Y - lines / labels\r\n\t\tctx.lineWidth = 0.2\r\n\t\tctx.beginPath()\r\n\t\tctx.strokeStyle = 'grey'\r\n\t\tvar stepY = maxY / 8\r\n\t\tctx.fillStyle = self.options.colors.label\r\n\t\tfor (var y = 0; y < 8; y++) {\r\n\t\t\tctx.moveTo(0, Y0 - y * stepY * scaleY)\r\n\t\t\tctx.lineTo(width, Y0 - y * stepY * scaleY)\r\n\t\t\tctx.fillText(_round(y * stepY).toString(), 5, Y0 - y * stepY  * scaleY - symbolSize)\r\n\t\t}\r\n\t\tctx.stroke()\r\n\r\n\t\t//-------------------------X - labels\r\n\t\tvar labelSize = symbolSize * 8\r\n\t\tvar dense =  _max(_abs(b - a) / width * labelSize, 1)\r\n\r\n\t\tvar dataX = _getColumn(data, 'x')\r\n\t\tfor (var i = a; i < b; i++) {\r\n\t\t\tvar label = _getDateText(dataX[i+1], 2)\r\n\t\t\tvar w = ctx.measureText(label).width\r\n\r\n\t\t\tif (i % _round(dense) === 0) {\r\n\t\t\t\tctx.fillStyle = self.options.colors.label\r\n\t\t\t\tctx.fillText(label, _round((i * scaleView - left) * scaleX - w / 2),\tY0 + symbolSize + 6)\r\n\t\t\t}\t\r\n/*\r\n\t\t\tif (i % (_round(dense) -1) === 0) {\r\n\t\t\t\tctx.fillStyle = 'rgba(100, 100, 100, ' + (1 - (dense - Math.floor(dense)))   +  ')'\r\n\t\t\t\tctx.fillText(label, _round((i * scaleView - left) * scaleX - w / 2),\tY0 + symbolSize + 6)\r\n\t\t\t}\r\n*/\r\n\t\t}\r\n\r\n\t\t//-------------------------Selection\r\n\t\tif (self.select !== -1) {\r\n\t\t\tvar i = _round((left * scaleX + self.select) / (scaleX * scaleView))\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.strokeStyle = 'grey'\r\n\t\t\tctx.lineWidth = 0.5\r\n\t\t\tvar x = i * scaleView * scaleX - left * scaleX\r\n\t\t\tctx.moveTo(x, symbolSize * 1.8)\r\n\t\t\tctx.lineTo(x, height - symbolSize * 1.8)\r\n\t\t\tctx.stroke()\r\n\r\n\t\t\tctx.lineWidth = lineWidth\r\n\t\t\tfor (var name in names) if (names[name].visible) {\r\n\t\t\t\tvar dataY = _getColumn(data, name)\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.strokeStyle = data.colors[name]\r\n\t\t\t\tctx.fillStyle = '#fff'\r\n\t\t\t\tvar y = Y0 - dataY[i+1] * scaleY\r\n\t\t\t\tctx.arc(x, y, 4, 0, 2*Math.PI, false)\r\n\t\t\t\tctx.fill()\r\n\t\t\t\tctx.stroke()\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t_drawLabelBox(ctx, x, data, self.names, i+1, symbolSize * 1.4,  self.options.colors.background, self.options.colors.minimap ,self.options.colors.label, width)\r\n\t\t}\r\n\r\n\t}\t// _drawGraph\r\n\r\n\tfunction _drawMinimap(self) {\r\n\t\tvar ctx = self.ctx\r\n\t\tvar sb = self.options.minimapBandSize\r\n\t\tvar colors = self.options.colors\r\n\t\tvar r = _getMinimapRect(self)\r\n\r\n\t\tctx.beginPath()\r\n\t\tctx.fillStyle = colors.minimap\r\n\t\tctx.fillRect(0, r.y, r.x + sb, r.h)\r\n\t\tctx.fillRect(r.x + r.w - sb, r.y, self.vw - r.x - r.w + sb , r.h)\r\n\r\n   \tctx.fillStyle = colors.minimapFrame\r\n\t\t_drawRoundedRect(ctx, r.x,            r.y, sb, r.h, 6, [1,1,0,0])\r\n\t\t_drawRoundedRect(ctx, r.x + r.w - sb, r.y, sb, r.h, 6, [0,0,1,1])\r\n\t\tctx.fill()\r\n\r\n\t\tctx.fillRect(r.x + sb, r.y, r.w-sb*2, 2)\r\n\t\tctx.fillRect(r.x + sb, r.y+r.h-2, r.w-sb*2, 2)\r\n\r\n\t\t_drawGraph(self,r.y, r.h, false, 1, false, self.getMaxY(1, self.dataLength))\r\n\t\t//animation\r\n\t\tif (_drag.mode !== 0) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.fillStyle = colors.minimapDrag\r\n\t\t \tctx.arc(r.x + [0, sb/2, r.w-sb/2, r.w/2][_drag.mode], r.y + r.h/2, self._transitions.minimap.pos,   0, 2*Math.PI, false)\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _drawControls(self) {\r\n\t\tvar ctx = self.ctx\r\n\t\tctx.font = _fontShift(self.font, 4)\r\n\t\tvar data = self.data\r\n\t\t_iterateControls(self, function(r, col){\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.fillStyle = self.options.colors.minimap\r\n\t\t\t_drawRoundedRect(ctx, r.x, r.y, r.w, r.h, r.h/2).fill()\r\n\t\t\tctx.textBaseline = 'middle'\r\n\t\t\tif (self.names[col].visible) {\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.fillStyle = data.colors[col]\r\n\t\t\t\tctx.arc(r.x + r.h/2, r.y+r.h/2, r.h/3, 0, 2*Math.PI, false)\r\n\t\t\t\tctx.fill()\r\n\r\n\t\t\t\t//ctx.font = _fontShift(self.font, 4, true)\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.fillStyle = '#fff'\r\n\t\t\t\tctx.fillText('\\u2713' , r.x + r.h/2.7, r.y + r.h/2)\r\n\t\t\t} else {\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.strokeStyle = data.colors[col]\r\n\t\t\t\tctx.arc(r.x + r.h/2, r.y+r.h/2, r.h/3, 0, 2*Math.PI, false)\r\n\t\t\t\tctx.stroke()\r\n\t\t\t}\r\n\t\t\tctx.fillStyle = data.colors[col]\r\n\t\t\tctx.beginPath()\t\r\n\t\t\tctx.fillText(data.names[col], r.x + r.h , r.y + r.h/2)\r\n\t\t\tctx.textBaseline = 'bottom'\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tfunction _draw() {\r\n\t\tvar ctx = this.ctx\r\n\t\tctx.fillStyle = this.options.colors.background\r\n\t\tctx.fillRect(0, 0, this.vw, this.vh)\r\n\t\tctx.font = this.font\r\n\t\t_drawMinimap(this)\r\n\t\t_drawControls(this)\r\n\r\n\t\tvar h = _round(this.vh - this.minimap.vh - this.controls.vh)\r\n\t\t_drawGraph(this, 0, h, true, 2, true, this._transitions.graph.pos)\r\n\t\t\r\n\t\tvar r = this._transitions.pointer.pos\r\n\t\tif (r > 0) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.fillStyle = 'rgba(200, 190, 190, 0.2)'\r\n\t\t\tctx.arc(pointerX, pointerY, r,   0, 2*Math.PI, false)\r\n\t\t\tif (r > 12)\tctx.arc(pointerX, pointerY, r-12,   0, 2*Math.PI, true)\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t\t\r\n\t\tif (_transitions(this._transitions)) this.draw() // -- re-call while transitions running\r\n\t}\r\n\t// helpers end\r\n\r\n\t//--------------------------------------------------------------------------------------\r\n\t// VanillaChart.prototype methods:\r\n\tthis.draw = function() {\r\n\t\trequestAnimationFrame(_draw.bind(this))\r\n\t}\r\n\r\n\tthis.move = function(e) {\r\n\t\tvar r = e.target.getBoundingClientRect()\r\n\t\tif (e.type === 'touchstart') e = e.targetTouches[0]\r\n\t\tvar x = e.clientX - r.left, y = e.clientY - r.top\r\n\t\tif (y < (this.vh - this.minimap.vh - this.controls.vh)) {\r\n\t\t\tthis.select = x\r\n\t\t\tthis.draw()\r\n\t\t}\r\n\t}\r\n\r\n\tthis.mousetouch\t= function(e) {\r\n\t\tif (_drag.runBnd || _drag.doneBnd) return\r\n\t\tvar r = e.target.getBoundingClientRect()\r\n\t\tvar event = e\r\n\t\tif (e.type === 'touchstart') e = e.targetTouches[0]\r\n\t\tpointerX = e.clientX - r.left\r\n\t\tpointerY = e.clientY - r.top\r\n\t\t\r\n\t\t_drag.mode = _getPointingRegion(this, pointerX, pointerY)\r\n\t\tif (_drag.mode > 0) {\r\n\t\t\te.target.style.cursor = 'w-resize'\r\n\t\t\t_drag.start = e.clientX\r\n\t\t\t_drag.left = this.minimap.left\r\n\t\t\t_drag.right = this.minimap.right\r\n\t\t\t_drag.runBnd = _dragRun.bind(this)\r\n\t\t\t_drag.doneBnd = _dragDone.bind(this)\r\n\t\t\t_listen(document, ['mousemove', 'touchmove'], _drag.runBnd)\r\n\t\t\t_listen(document, ['mouseup', 'touchend'], _drag.doneBnd)\r\n\t\t\tthis.initTransition('minimap', 'current', _round(this.minimap.vh / 2) )\r\n\t\t} else {\r\n\t\t\tvar self = this\r\n\t\t\t_iterateControls(this, function(r, col){\r\n\t\t\t\tif (_inRect(pointerX, pointerY, r)) {\r\n\t\t\t\t\tevent.preventDefault()\r\n\t\t\t\t\tself.setVisibility(col)\r\n\t\t\t\t\tself.initTransition('pointer', 'current', 50, function () { self._transitions.pointer.pos = 0}.bind(self)  )\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setData = function(data) {\r\n\t\tthis.data = data\r\n\t\ttry {\r\n\t\t\tthis.dataLength = data.columns[0].length - 1\r\n\t\t}\tcatch (e)\t{\r\n\t\t\tthrow new TypeError('incorrect <inputData> format')\r\n\t\t}\r\n\t\tvar ctx = this.ctx\r\n\t\tctx.font = _fontShift(this.font, 4, true)\r\n\t\tthis.controls.h = ctx.measureText('M').width * 3.5\r\n\t\tthis.controls.width = 0\r\n\t\tthis.names = {}\r\n\t\tfor (var k in data.names)\t{\r\n\t\t\tvar w = ctx.measureText(data.names[k]).width + this.controls.h + this.options.padding\r\n\t\t\tthis.controls.width += w\r\n\t\t\tthis.names[k] = {\r\n\t\t\t\tvisible: true, // visible by default\r\n\t\t\t\twidth: w\r\n\t\t\t}\r\n\t\t}\t\r\n\t\tthis.initTransition('graph', 'current', this.getMaxY() )\r\n\t}\r\n\r\n\tthis.setVisibility = function(col, vis) {\r\n\t\tthis.names[col].visible = (typeof vis === 'undefined')? !this.names[col].visible : vis\r\n\t\tthis.initTransition('graph', 'current', this.getMaxY() )\r\n\t}\r\n\r\n\tthis.getMaxY = function(a, b) {\r\n\t\tvar max = 0\r\n\t\ta = a || 0\r\n\t\tb = b || this.dataLength\r\n\t\tfor (var name in this.names) if (this.names[name].visible) {\r\n\t\t\tvar column = _getColumn(this.data, name)\r\n\t\t\tfor (var i = a + 1; i < b + 1; i++) max = _max(max, column[i])\r\n\t\t}\r\n\t\treturn max\r\n\t}\r\n\r\n\tthis.initTransition = function(key, from, to, onComplete) {\r\n\t\tvar trns = this._transitions\r\n\t\tvar trn = trns[key]\r\n\t\ttrn.from = (from === 'current')?trn.pos: from\r\n\t\ttrn.pos = trn.from\r\n\t\ttrn.to = to\r\n\t\ttrn.ts = performance.now()\r\n\t\ttrn.onComplete = onComplete\r\n\t\tvar running = false\r\n\t\tfor (var k in trns) running = running || trns[k].run\r\n\t\tif (!running) this.draw()\r\n\t\ttrn.run = true\r\n\t}\r\n\r\n\r\n}).call(VanillaChart.prototype)\r\n\r\nif (typeof window !== 'undefined') window.VanillaChart = VanillaChart\r\n\r\n})()\r\n"]}