{"version":3,"sources":["./src/vanilla-chart.js"],"names":["_min","Math","min","_max","max","_round","round","_floor","floor","_log","x","y","log","_listen","target","events","handler","listen","i","length","removeEventListener","addEventListener","defaults","padding","minimapHeightRel","minimapBandSize","colors","background","minimap","minimapFrame","minimapDrag","label","labelBackground","transition","run","duration","ts","from","to","pos","onComplete","VanillaChart","containerId","data","this","names","tree","options","container","document","getElementById","Error","canvas","appendChild","createElement","ctx","getContext","font","window","getComputedStyle","vw","vh","select","controls","h","width","left","right","rlLeft","rlRight","a","b","_transitions","Object","create","graph","pointer","setData","clientWidth","height","clientHeight","draw","bind","move","mousetouch","pointerX","pointerY","_drag","mode","start","runBnd","doneBnd","_buildTree","self","n","dataLength","T","Array","name","visible","column","_getColumn","_getMaxY","useMinimap","l","r","result","_treeMax","_getMinimapRect","mm","margin","w","_calcMinimap","scaleView","_iterateControls","cb","pad","col","_inRect","columns","_fontShift","delta","bold","replace","m","p1","Number","_getDateText","unixDate","part","String","prototype","substr","apply","Date","_drawRoundedRect","corners","methods","moveTo","_drawGraph","lineWidth","grid","maxY","symbolSize","measureText","scaleX","scaleY","Y0","visCount","lineJoin","beginPath","strokeStyle","dataY","lineTo","stroke","msg","msgWidth","fillStyle","fillText","dense","toString","pow","labelSize","dataX","arc","PI","fill","_labelHeight","bkColor","borderColor","labelColor","date","dateLabel","dateWidth","obj","key","value","color","p","_x","_drawLabelBox","_draw","fillRect","initTransition","textBaseline","_drawControls","sb","_drawMinimap","trns","trn","performance","now","requestAnimationFrame","e","getBoundingClientRect","type","targetTouches","clientX","clientY","top","event","_getPointingRegion","style","cursor","sbSize","preventDefault","setVisibility","TypeError","k","vis","running","call"],"mappings":"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","sourcesContent":["(function() {\r\n\r\n'use strict'\r\n\r\nvar \r\n\t_min = Math.min, \r\n\t_max = Math.max,\r\n\t_round = Math.round,\r\n\t_floor = Math.floor,\r\n\t_log = function(x,y) {\r\n\t\t return Math.log(y) / Math.log(x)\r\n\t}\r\n\r\nfunction _listen(target, events, handler, listen) {\r\n\tfor (var i = 0; i < events.length; i++)\t\r\n\t\t(listen === false)\r\n\t\t? target.removeEventListener(events[i], handler)\r\n\t\t: target.addEventListener(events[i], handler)\r\n}\r\n\r\nvar defaults = {\r\n\tpadding: 5,\r\n\tminimapHeightRel: 0.14,\r\n\tminimapBandSize: 12,\r\n\tcolors: {\r\n\t\tbackground: '#fff',\r\n\t\tminimap: '#f4f8ff',\r\n\t\tminimapFrame: '#c8dde8',\r\n\t\tminimapDrag: 'rgba(175, 175, 210, 0.2)',\r\n\t\tlabel: '#666',\r\n\t\tlabelBackground: 'rgba(240, 240, 250, 0.82)'\r\n\t}\r\n}\r\n\r\nvar transition = {\r\n\trun: false,\r\n\tduration: 200,\r\n\tts: 0,\r\n\tfrom: 0,\r\n\tto: 0,\r\n\tpos: 0,\r\n\tonComplete: null\r\n}\r\n\r\n// ----------------------------------------------\r\n\r\nfunction VanillaChart(containerId, data) {\r\n/*\r\n\tthe data contract is:\r\n\t\tcolors: {y0: \"#3DC23F\", y1: \"#F34C44\"}\r\n\t\tcolumns: (3) [Array(113), Array(113), Array(113)]\r\n\t\tnames: {y0: \"#0\", y1: \"#1\"}\r\n\t\ttypes: {y0: \"line\", y1: \"line\", x: \"x\"}\r\n*/\r\n\tthis.data = null\r\n\tthis.names = {}\r\n\tthis.tree = [] // segment tree\r\n\tthis.options = defaults\r\n\tthis.container = document.getElementById(containerId)\r\n\tif (!this.container) throw new Error('chart container not found!')\r\n\tthis.canvas = this.container.appendChild(document.createElement('canvas'))\r\n\tthis.ctx = this.canvas.getContext('2d')\r\n\tthis.ctx.font = window.getComputedStyle(this.container, null).font\r\n\tthis.font = this.ctx.font\r\n\tthis.vw = 0\r\n\tthis.vh = 0\r\n\tthis.select = -1\r\n\r\n\tthis.controls = {\r\n\t\th: 0,\r\n\t\tvh: 0,\r\n\t\twidth: 0\r\n\t}\r\n\r\n\tthis.minimap = {\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\trlLeft: 0.75,\r\n\t\trlRight: 1,\r\n\t\ta: 0,\r\n\t\tb: 0,\r\n\t\tvh: 0\r\n\t}\r\n\r\n\tthis._transitions = {\r\n\t\tminimap: Object.create(transition),\r\n\t\tgraph: Object.create(transition),\r\n\t\tpointer: Object.create(transition)\r\n\t}\r\n\r\n\tthis.setData(data)\r\n\r\n\tvar _justifySize = function() {\r\n\t\tthis.vw = this.canvas.width  = this.container.clientWidth\r\n\t\tthis.vh = this.canvas.height = this.container.clientHeight\r\n\t\tthis.minimap.left = _round(this.vw * this.minimap.rlLeft)\r\n\t\tthis.minimap.right = _round(this.vw * this.minimap.rlRight)\r\n\t\tthis.minimap.vh = _round(this.vh * this.options.minimapHeightRel)\r\n\t\tthis.controls.vh = (this.controls.h + this.options.padding*2) * (1 + Math.floor(this.controls.width/this.vw))\r\n\t\tthis.select = -1\r\n\t\tthis.draw()\r\n\t}\r\n\r\n\t_listen(window, ['resize','load'], _justifySize.bind(this))\r\n\t_listen(this.canvas, ['mousemove', 'toucmove'], this.move.bind(this))\r\n\t_listen(this.canvas, ['mousedown', 'touchstart'], this.mousetouch.bind(this))\r\n}\r\n\r\n(function() {\r\n\t// helpers (a spike of private data/methods ):\r\n\tvar pointerX = 0\r\n\tvar pointerY = 0\r\n\tvar _drag = {\r\n\t\tmode: 0,\r\n\t\tstart: 0,\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\trunBnd: null,\r\n\t\tdoneBnd: null\r\n\t}\r\n\t\r\n\tfunction _buildTree(self) { // build segment tree (with max)\r\n\t\tvar n = (1 << (_log(2, self.dataLength - 1) + 1))\r\n\t\tvar T = new Array(2*n)\r\n\r\n\t\tfor (var i = 0; i <= self.dataLength; i++) {\r\n\t\t\tvar max = -1\r\n\t\t\tfor (var name in self.names) if (self.names[name].visible) {\r\n\t\t\t\tvar column = _getColumn(self.data, name)\r\n\t\t\t\tmax = _max(max, column[i+1])\r\n\t\t\t}\r\n\t\t\tT[i] = max\r\n\t\t}\r\n\r\n\t\tfor (i = self.dataLength; i < 2*n; i++) T[i] = -1\r\n\t\tfor (i = n; i < 2*n; i++) T[i] = T[i - n]\r\n\t\tfor (i = n - 1; i > 0; i--)\tT[i] = _max(T[2 * i], T[2 * i + 1])\r\n\t\treturn T\r\n\t}\r\n\t\r\n\tfunction _treeMax(T, l, r) {\r\n\t\tvar result = -1\r\n\t\tvar n = T.length / 2\r\n\t\tl += n - 1, r += n - 1\r\n\t\twhile (l <= r) {\r\n\t\t\tif (l & 1) result = _max(result, T[l])\r\n\t\t\tif (!(r & 1)) result = _max(result, T[r])\r\n\t\t\tl = _floor((l + 1) / 2)\r\n\t\t\tr = _floor((r - 1) / 2)\r\n\t\t}\t\t\r\n\t\treturn result\r\n\t}\r\n\r\n\tfunction _getMaxY (self, useMinimap) {\r\n\t\tvar a = useMinimap ? self.minimap.a : 0\r\n\t\tvar b = useMinimap ? self.minimap.b : self.dataLength - 1\r\n\t\treturn _treeMax(self.tree, a+1, b+1)\r\n\t}\r\n\r\n\tfunction _getMinimapRect(self) {\r\n\t\tvar mm = self.minimap\r\n\t\tvar margin = _round(mm.vh * 0.10)\r\n\t\treturn {\r\n\t\t\ty: self.vh - mm.vh + margin - self.controls.vh,\r\n\t\t\tx: mm.left,\r\n\t\t\tw: mm.right - mm.left,\r\n\t\t\th: mm.vh - margin * 2\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _calcMinimap(self) {\r\n\t\tif (self.vw === 0) return\r\n\t\tvar mm = self.minimap\r\n\t\tvar scaleView = self.vw / (self.dataLength - 1)\r\n\t\tmm.rlLeft = mm.left / self.vw\r\n\t\tmm.rlRight = mm.right / self.vw\r\n\t\tmm.a = _round(mm.left / scaleView)\r\n\t\tmm.b = _round(mm.right / scaleView)\r\n\t}\r\n\r\n\tfunction _iterateControls(self, cb) {\r\n\t\tvar pad = self.options.padding\r\n\t\tvar controls = self.controls\r\n\t\tvar names = self.names\r\n\t\tvar x = pad, i = 0\r\n\t\tvar y = self.vh - controls.vh + pad\r\n\t\tfor (var col in self.data.names) {\r\n\t\t\tif (x + names[col].width + pad > self.vw) {\r\n\t\t\t\tx = pad\r\n\t\t\t\ty = y + controls.h + pad\r\n\t\t\t}\r\n\t\t\tif (cb) cb({x: x, y: y, w: names[col].width, h: controls.h - pad}, col)\r\n\t\t\tx = x + names[col].width + pad\r\n\t\t\ti++\r\n\t\t}\r\n\t\treturn i\r\n\t}\r\n\r\n\tfunction _inRect(x, y, r) {\r\n\t\treturn (r.x <= x && x <= r.x + r.w && r.y <= y && y <= r.y + r.h)\r\n\t}\r\n\r\n\tfunction _getPointingRegion(self, x, y) {\r\n\t\tvar r = _getMinimapRect(self)\r\n\t\tvar sb = self.options.minimapBandSize\r\n\t\tif (y < r.y) return 7\r\n\t\tif (_inRect(x, y, r)) {\r\n\t\t\tif (x < r.x + sb)\treturn 1\r\n\t\t\tif (x > r.x + r.w - sb)\treturn 2\r\n\t\t\treturn 3\r\n\t\t}\r\n\t\treturn 0\r\n\t}\r\n\r\n\tfunction _getColumn(data, name) {\r\n\t\tfor (var i = 0; i < data.columns.length; i++) {\r\n\t\t\tif (data.columns[i][0] === name) return data.columns[i]\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\tfunction _transitions(trns) {\r\n\t\tvar result = false\r\n\t\tfor (var key in trns) {\r\n\t\t\tvar trn = trns[key]\r\n\t\t\tresult = result || trn.run\r\n\t\t\t// linear duration(ms) based transition \r\n\t\t\tif (trn.run) {\r\n\t\t\t\ttrn.pos = trn.from + (trn.to - trn.from) / trn.duration * (performance.now() - trn.ts) \r\n\t\t\t\tif ((trn.to > trn.from && trn.pos >= trn.to) || (trn.to < trn.from && trn.pos <= trn.to) || trn.to === trn.from  ) {\r\n\t\t\t\t\ttrn.run = false\r\n\t\t\t\t\ttrn.pos = trn.to\r\n\t\t\t\t\tif (trn.onComplete) trn.onComplete()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t} //_transitions\r\n\r\n\tfunction _dragRun(e) {\r\n\t\tthis.select = -1\r\n\t\tvar delta = 0\r\n\t\tif (e) {\r\n\t\t\tif (e.type === 'touchmove') e = e.targetTouches[0]\r\n\t\t \tdelta = e.clientX - _drag.start\r\n\t\t}\r\n\t\tvar mm = this.minimap\r\n\t\tvar sbSize = this.options.minimapBandSize\r\n\t\t\r\n\t\tif (_drag.mode & 4) delta = -delta //drag by body - reversal\r\n\t\tif (_drag.mode & 1) {\r\n\t\t\tmm.left = _drag.left + delta\r\n\t\t\tmm.left = _max(mm.left, 1)\r\n\t\t\tmm.left = _min(mm.left, mm.right - sbSize * 2 - 1)\r\n\t\t}\r\n\t\tif (_drag.mode & 2) {\r\n\t\t\tmm.right = _drag.right + delta \r\n\t\t\tmm.right = _min(mm.right, this.vw - 1)\r\n\t\t\tmm.right = _max(mm.right, mm.left + sbSize * 2 + 1)\r\n\t\t}\r\n\t\t_calcMinimap(this)\r\n\t\tthis.initTransition('graph', 'current', _getMaxY(this, true) )\r\n\t}\r\n\r\n\tfunction _dragDone(e) {\r\n\t\t if (e.type !== 'touchmove') e.target.style.cursor='default'\r\n\t\t_listen(document, ['mousemove', 'touchmove'], _drag.runBnd, false)\r\n\t\t_listen(document, ['mouseup', 'touchend'], _drag.doneBnd, false)\r\n\t\t_drag.runBnd = null\r\n\t\t_drag.doneBnd = null\r\n\t\tthis.initTransition('minimap', 'current', 0, function(){_drag.mode = 0} )\r\n\t}\r\n\r\n\tfunction _fontShift(font, delta, bold) {\r\n\t\treturn font.replace(/(\\d*\\.?\\d+)px/, function(m, p1) {return (bold?'bold ':'') + Number(Number(p1)+delta)+'px' } )\r\n\t}\r\n\r\n\tfunction _getDateText(unixDate, part) {\r\n\t\treturn String.prototype.substr.apply((new Date(unixDate)), [[0, 3], [4, 11],\t[4, 6],\t[11, 4]][part])\r\n\t}\r\n\r\n\tfunction _drawRoundedRect(ctx, x, y, w, h, r, corners) {\r\n\t\tvar methods = ['arcTo', 'lineTo']\r\n\t\tcorners = corners || [0, 0, 0 ,0]\r\n\t\tctx.moveTo(x+r, y)\r\n\t\tctx[ methods[corners[0]] ](x+w, y,   x+w, y+h, r) \r\n\t\tctx[ methods[corners[1]] ](x+w, y+h, x,   y+h, r)\r\n\t\tctx[ methods[corners[2]] ](x,   y+h, x,   y,   r)\r\n\t\tctx[ methods[corners[3]] ](x,   y,   x+w, y,   r)\r\n\t\treturn ctx\r\n\t}\r\n\r\n\tfunction _drawLabelBox(ctx, x, data, visible, i, _labelHeight, bkColor, borderColor, labelColor, vw) {\r\n\t// displays info for 1, 2 and more named columns\r\n\t\tvar p = 10\r\n\t\tvar date = _getColumn(data, 'x')[i]\r\n\t\tvar dateLabel = _getDateText(date, 0) + ', ' + _getDateText(date, 2)\r\n\t\tvar dateWidth = ctx.measureText(dateLabel).width\r\n\t\tvar obj = {}\r\n\t\tvar width = 0\r\n\t\tfor (var key in data.names) {\r\n\t\t\tif (visible[key].visible) {\r\n\t\t\t\tobj[key] = {}\r\n\t\t\t\tobj[key].name = data.names[key]\r\n\t\t\t\tobj[key].value = _getColumn(data, key)[i]\r\n\t\t\t\tobj[key].width = _max(ctx.measureText(obj[key].name).width, ctx.measureText(obj[key].value).width)\r\n\t\t\t\tobj[key].color = data.colors[key]\r\n\t\t\t\twidth += obj[key].width + p\r\n\t\t\t}\r\n\t\t}\r\n\t\twidth = _max(dateWidth, width) + p\r\n\t\tx = x - width / 2\r\n\t\tif (x < 0) x = 0\r\n\t\tif (x + width > vw) x = vw - width\r\n\r\n\t\tctx.fillStyle = bkColor\r\n\t\tctx.strokeStyle = borderColor\r\n\t\tctx.beginPath()\r\n\t\t_drawRoundedRect(ctx, x, 1, width, _labelHeight * 3 + p, 6).fill()\r\n\t\tctx.stroke()\r\n\r\n\t\tctx.fillStyle = labelColor\r\n\t\tctx.beginPath()\r\n\t\tctx.fillText(dateLabel, x + width/2 - dateWidth/2, _labelHeight + p/2)\r\n\r\n\t\tvar w = 0, _x = x\r\n\t\tvar font = ctx.font\r\n\t\tvar bold = _fontShift(ctx.font, 2, true)\r\n\t\tfor (key in obj) {\r\n\t\t\tctx.fillStyle = obj[key].color\r\n\t\t\tw = obj[key].width\r\n\t\t\tctx.font = bold\r\n\t\t\tctx.fillText(obj[key].value , _x + p,\t_labelHeight*2 + p\t)\r\n\t\t\tctx.font = font\r\n\t\t\tctx.fillText(obj[key].name ,  _x + p,\t_labelHeight*3 + p/1.2)\r\n\t\t\t_x = _x + w + 10\r\n\t\t}\r\n\t\tctx.fill()\r\n\t}\r\n\r\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\tfunction _drawGraph(self, y, height, useMinimap, lineWidth, grid, maxY) {\r\n\r\n\t\tvar ctx = self.ctx\r\n\t\tvar symbolSize = ctx.measureText('M').width\r\n\t\tif (grid)\theight = height - symbolSize - 8\r\n\t\tvar data = self.data, \r\n\t\t\tnames = self.names;\r\n\r\n\t\tvar left = 0, \r\n\t\t\tright = self.vw,\r\n\t\t\ta = 0,\r\n\t\t\tb = self.dataLength-1;\r\n\t\tif (useMinimap) {\r\n\t\t\ta = _max(0, self.minimap.a - 1),\r\n\t\t\tb = _min(self.minimap.b + 1, self.dataLength-1),\r\n\t\t\tleft = self.minimap.left, \r\n\t\t\tright = self.minimap.right\r\n\t\t}\r\n\t\tvar\twidth = self.vw,\r\n\t\t\tscaleView = width / (self.dataLength - 1),\r\n\t\t\trlLeft = left / width,\r\n\t\t\trlRight = right / width,\r\n\t\t\tscaleX = (1 / (rlRight - rlLeft)),\r\n\t\t\tscaleY = height / maxY,\r\n\t\t\tY0 = y + height,\r\n\t\t\tvisCount = 0;\r\n\r\n\t\tctx.lineWidth = lineWidth\r\n\t\tctx.lineJoin = 'round'\r\n\t\tctx.font = self.font\r\n\t\tfor (var name in names) if (names[name].visible) {\r\n\t\t\tvisCount++\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.strokeStyle = data.colors[name]\r\n\t\t\tvar dataY = _getColumn(data, name)\r\n\t\t\t// [a..b] - no need offscreen drawing\r\n\t\t\tfor (var i = a; i <= b; i++) ctx.lineTo(\r\n\t\t\t\t(i * scaleView - left) * scaleX,\r\n\t\t\t\tY0 - dataY[i+1] * scaleY\r\n\t\t\t)\r\n\t\t\tctx.stroke()\r\n\t\t}\r\n\r\n\t\tif (grid && visCount === 0) {\r\n\t\t\tvar msg = 'No data to display'\r\n\t\t\tvar msgWidth = ctx.measureText(msg).width\r\n\t\t\tctx.fillStyle = self.options.colors.label\r\n\t\t\tctx.font = _fontShift(ctx.font, 4, false)\r\n\t\t\tctx.fillText(msg, width/2-msgWidth/2 , height/2)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (!grid ) return\r\n\t\t//-------------------------Y - lines / labels\r\n\t\tctx.lineWidth = 0.2\r\n\t\tctx.beginPath()\r\n\t\tctx.strokeStyle = 'grey'\r\n\t\tctx.fillStyle = self.options.colors.label\r\n\t\tvar dense = _round(_max(0, _log(2, (height / 6)/ scaleY)))\r\n\t\tvar i = 0\r\n\t\twhile (i < maxY) {\r\n\t\t\tvar y = i * scaleY\r\n\t\t\tctx.moveTo(0, Y0 - y)\r\n\t\t\tctx.lineTo(width, Y0 - y)\r\n\t\t\tctx.fillText(_round(i).toString(), 5, Y0 - y )\r\n\t\t\ti += Math.pow(2, dense)\r\n\t\t}\r\n\t\tctx.stroke()\r\n\r\n\t\t//-------------------------X - labels\r\n\t\t// note: this works fine only if intervals are regular\r\n\t\tvar labelSize = _round(symbolSize * 7)\r\n\t\tvar dense = _round(_max(0, _log(2, labelSize / (scaleView * scaleX))))\t// (scaleView * scaleX) - in fact is a distance between 2 near points\r\n\t\t//run out of time to polish label animation\r\n\t\t//\t\tvar alpha = ((dense - Math.floor(dense)))\r\n\t\tvar i = 1, label, w, dataX = _getColumn(data, 'x');\r\n\t\twhile (i < b) {\r\n\t\t\tvar x = (i * scaleView - left) * scaleX\r\n\t\t\tif (x > symbolSize) {\r\n\t\t\t\tlabel = _getDateText(dataX[i+1], 2)\r\n\t\t\t\tw = ctx.measureText(label).width\r\n\t\t\t\tctx.fillText(label, _round(x - w / 2),\tY0 + symbolSize + 6)\r\n\t\t\t}\r\n\t\t\ti += Math.pow(2, dense)\r\n\t\t}\r\n\r\n\t\t//-------------------------Selection\r\n\t\tif (self.select !== -1) {\r\n\t\t\tvar i = _round((left * scaleX + self.select) / (scaleX * scaleView))\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.strokeStyle = 'grey'\r\n\t\t\tctx.lineWidth = 0.5\r\n\t\t\tvar x = i * scaleView * scaleX - left * scaleX\r\n\t\t\tctx.moveTo(x, symbolSize * 5)\r\n\t\t\tctx.lineTo(x, height)\r\n\t\t\tctx.stroke()\r\n\r\n\t\t\tctx.lineWidth = lineWidth\r\n\t\t\tfor (var name in names) if (names[name].visible) {\r\n\t\t\t\tvar dataY = _getColumn(data, name)\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.strokeStyle = data.colors[name]\r\n\t\t\t\tctx.fillStyle = self.options.colors.background\r\n\t\t\t\tvar y = Y0 - dataY[i+1] * scaleY\r\n\t\t\t\tctx.arc(x, y, 4, 0, 2*Math.PI, false)\r\n\t\t\t\tctx.fill()\r\n\t\t\t\tctx.stroke()\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t_drawLabelBox(ctx, x, data, self.names, i+1, symbolSize * 1.4,  self.options.colors.labelBackground, self.options.colors.minimap ,self.options.colors.label, width)\r\n\t\t}\r\n\r\n\t}\t// _drawGraph\r\n\r\n\tfunction _drawMinimap(self) {\r\n\t\tvar ctx = self.ctx\r\n\t\tvar sb = self.options.minimapBandSize\r\n\t\tvar colors = self.options.colors\r\n\t\tvar r = _getMinimapRect(self)\r\n\r\n\t\tctx.beginPath()\r\n\t\tctx.fillStyle = colors.minimap\r\n\t\tctx.fillRect(0, r.y, r.x + sb, r.h)\r\n\t\tctx.fillRect(r.x + r.w - sb, r.y, self.vw - r.x - r.w + sb , r.h)\r\n\r\n\t\tctx.fillStyle = colors.minimapFrame\r\n\t\t_drawRoundedRect(ctx, r.x,            r.y, sb, r.h, 6, [1,1,0,0])\r\n\t\t_drawRoundedRect(ctx, r.x + r.w - sb, r.y, sb, r.h, 6, [0,0,1,1])\r\n\t\tctx.fill()\r\n\t\tctx.fillRect(r.x + sb, r.y, r.w-sb*2, 2)\r\n\t\tctx.fillRect(r.x + sb, r.y+r.h-2, r.w-sb*2, 2)\r\n\r\n\t\t_drawGraph(self,r.y, r.h, false, 1, false, _getMaxY(self, false))\r\n\r\n\t\t//animation\r\n\t\tif (_drag.mode !== 0) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.fillStyle = colors.minimapDrag\r\n\t\t \tctx.arc(r.x + [0, sb/2, r.w-sb/2, r.w/2][_drag.mode], r.y + r.h/2, self._transitions.minimap.pos,   0, 2*Math.PI, false)\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _drawControls(self) {\r\n\t\tvar ctx = self.ctx\r\n\t\tctx.font = _fontShift(self.font, 4)\r\n\t\tvar data = self.data\r\n\t\t_iterateControls(self, function(r, col){\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.fillStyle = self.options.colors.minimap\r\n\t\t\tctx.strokeStyle = 'grey'\r\n\t\t\tctx.lineWidth = 0.3\r\n\t\t\t_drawRoundedRect(ctx, r.x, r.y, r.w, r.h, r.h/2).fill()\r\n\t\t\tctx.stroke()\r\n\t\t\tctx.textBaseline = 'middle'\r\n\t\t\tif (self.names[col].visible) {\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.fillStyle = data.colors[col]\r\n\t\t\t\tctx.arc(r.x + r.h/2, r.y+r.h/2, r.h/3, 0, 2*Math.PI, false)\r\n\t\t\t\tctx.fill()\r\n\r\n\t\t\t\tctx.font = _fontShift(self.font, 4, true)\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.fillStyle = '#fff'\r\n\t\t\t\tctx.fillText('\\u2713' , r.x + r.h*0.33, r.y + r.h*0.52)\r\n\t\t\t\tctx.font = _fontShift(self.font, 4)\r\n\t\t\t} else {\r\n\t\t\t\tctx.beginPath()\r\n\t\t\t\tctx.lineWidth = 1\r\n\t\t\t\tctx.strokeStyle = data.colors[col]\r\n\t\t\t\tctx.arc(r.x + r.h/2, r.y+r.h/2, r.h/3, 0, 2*Math.PI, false)\r\n\t\t\t\tctx.stroke()\r\n\t\t\t}\r\n\t\t\tctx.fillStyle = data.colors[col]\r\n\t\t\tctx.beginPath()\t\r\n\t\t\tctx.fillText(data.names[col], r.x + r.h , r.y + r.h/2)\r\n\t\t\tctx.textBaseline = 'bottom'\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tfunction _draw() {\r\n\t\tvar ctx = this.ctx\r\n\t\tctx.fillStyle = this.options.colors.background\r\n\t\tctx.fillRect(0, 0, this.vw, this.vh)\r\n\t\tctx.font = this.font\r\n\t\tif (this.minimap.b === 0 ) {\r\n\t\t\t_calcMinimap(this)\r\n\t\t\tthis.initTransition('graph', 'current', _getMaxY(this, true) )\r\n\t\t}\r\n\r\n\t\t_drawControls(this)\r\n\t\t_drawMinimap(this)\r\n\t\r\n\t\tvar h = _round(this.vh - this.minimap.vh - this.controls.vh)\r\n\t\t_drawGraph(this, 0, h, true, 2, true, this._transitions.graph.pos)\r\n\t\t\r\n\t\tvar r = this._transitions.pointer.pos\r\n\t\tif (r > 0) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.fillStyle = this.options.colors.minimapDrag\r\n\t\t\tctx.arc(pointerX, pointerY, r,   0, 2*Math.PI, false)\r\n\t\t\tif (r > 12)\tctx.arc(pointerX, pointerY, r-12,   0, 2*Math.PI, true)\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t\t\r\n\t\tif (_transitions(this._transitions)) this.draw() // -- re-call while transitions running\r\n\t}\r\n\t// helpers end\r\n\r\n\t//--------------------------------------------------------------------------------------\r\n\t// VanillaChart.prototype methods:\r\n\tthis.draw = function() {\r\n\t\trequestAnimationFrame(_draw.bind(this))\r\n\t}\r\n\r\n\tthis.move = function(e) {\r\n\t\tvar r = e.target.getBoundingClientRect()\r\n\t\tif (e.type === 'touchstart') e = e.targetTouches[0]\r\n\t\tvar x = e.clientX - r.left, y = e.clientY - r.top\r\n\t\tif (y < (this.vh - this.minimap.vh - this.controls.vh)) {\r\n\t\t\tthis.select = x\r\n\t\t\tthis.draw()\r\n\t\t}\r\n\t}\r\n\r\n\tthis.mousetouch\t= function(e) {\r\n\t\tif (_drag.runBnd || _drag.doneBnd) return\r\n\t\tvar r = e.target.getBoundingClientRect()\r\n\t\tvar event = e\r\n\t\tif (e.type === 'touchstart') e = e.targetTouches[0]\r\n\t\tpointerX = e.clientX - r.left\r\n\t\tpointerY = e.clientY - r.top\r\n\t\t\r\n\t\t_drag.mode = _getPointingRegion(this, pointerX, pointerY)\r\n\t\tif (_drag.mode > 0) {\r\n\t\t\tevent.target.style.cursor = 'w-resize'\r\n\t\t\t_drag.start = e.clientX\r\n\t\t\t_drag.left = this.minimap.left\r\n\t\t\t_drag.right = this.minimap.right\r\n\t\t\t_drag.runBnd = _dragRun.bind(this)\r\n\t\t\t_drag.doneBnd = _dragDone.bind(this)\r\n\t\t\t_listen(document, ['mousemove', 'touchmove'], _drag.runBnd)\r\n\t\t\t_listen(document, ['mouseup', 'touchend'], _drag.doneBnd)\r\n\t\t\tthis.initTransition('minimap', 'current', _round(this.minimap.vh*0.65) )\r\n\t\t} else {\r\n\t\t\tvar self = this\r\n\t\t\t_iterateControls(this, function(r, col){\r\n\t\t\t\tif (_inRect(pointerX, pointerY, r)) {\r\n\t\t\t\t\tevent.preventDefault()\r\n\t\t\t\t\tself.setVisibility(col)\r\n\t\t\t\t\tself.initTransition('pointer', 'current', 50, function () { self._transitions.pointer.pos = 0}.bind(self)  )\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setData = function(data) {\r\n\t\tthis.data = data\r\n\t\ttry {\r\n\t\t\tthis.dataLength = data.columns[0].length - 1\r\n\t\t}\tcatch (e)\t{\r\n\t\t\tthrow new TypeError('incorrect <inputData> format')\r\n\t\t}\r\n\t\tvar ctx = this.ctx\r\n\t\tctx.font = _fontShift(this.font, 4, true)\r\n\t\tthis.controls.h = _round(ctx.measureText('M').width * 3.5)\r\n\t\tthis.controls.width = 0\r\n\t\tthis.names = {}\r\n\t\tfor (var k in data.names)\t{\r\n\t\t\tvar w = ctx.measureText(data.names[k]).width + this.controls.h + this.options.padding * 2\r\n\t\t\tthis.controls.width += w\r\n\t\t\tthis.names[k] = {\r\n\t\t\t\tvisible: true, // visible by default\r\n\t\t\t\twidth: w - this.options.padding\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.tree = _buildTree(this)\r\n\t\tthis.initTransition('graph', 'current', _getMaxY(this, true) )\r\n\t}\r\n\r\n\tthis.setVisibility = function(col, vis) {\r\n\t\tthis.names[col].visible = (typeof vis === 'undefined')? !this.names[col].visible : vis\r\n\t\tthis.tree = _buildTree(this)\r\n\t\tthis.initTransition('graph', 'current', _getMaxY(this, true) )\r\n\t}\r\n\r\n\tthis.initTransition = function(key, from, to, onComplete) {\r\n\t\tvar trns = this._transitions\r\n\t\tvar trn = trns[key]\r\n\t\ttrn.from = (from === 'current')?trn.pos: from\r\n\t\ttrn.pos = trn.from\r\n\t\ttrn.to = to\r\n\t\ttrn.ts = performance.now()\r\n\t\ttrn.onComplete = onComplete\r\n\t\tvar running = false\r\n\t\tfor (var k in trns) running = running || trns[k].run\r\n\t\tif (!running) this.draw()\r\n\t\ttrn.run = true\r\n\t}\r\n\r\n\r\n}).call(VanillaChart.prototype)\r\n\r\nif (typeof window !== 'undefined') window.VanillaChart = VanillaChart\r\n\r\n})()\r\n"]}