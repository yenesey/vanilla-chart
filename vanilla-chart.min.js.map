{"version":3,"sources":["./src/vanilla-chart.js"],"names":["_min","Math","min","_max","max","_round","round","_floor","floor","_log","x","y","log","_listen","target","events","handler","listen","i","length","removeEventListener","addEventListener","defaults","padding","minimapHeightRel","minimapBandSize","colors","background","minimap","minimapFrame","minimapDrag","label","labelBackground","transition","run","duration","ts","from","to","pos","onComplete","VanillaChart","containerId","data","this","names","tree","options","container","document","getElementById","Error","canvas","appendChild","createElement","ctx","getContext","font","window","getComputedStyle","vw","vh","select","controls","h","width","left","right","rlLeft","rlRight","a","b","_transitions","Object","create","graph","pointer","setData","clientWidth","height","clientHeight","draw","bind","move","mousetouch","pointerX","pointerY","_drag","mode","start","runBnd","doneBnd","_buildTree","self","n","log2","dataLength","T","Array","name","visible","column","_getColumn","_getMaxY","useMinimap","l","r","result","_treeMax","_getMinimapRect","mm","margin","w","_calcMinimap","scaleView","_iterateControls","cb","pad","col","_inRect","columns","_fontShift","delta","bold","replace","m","p1","Number","_getDateText","unixDate","part","String","prototype","substr","apply","Date","_drawRoundedRect","corners","methods","moveTo","_drawGraph","lineWidth","grid","maxY","symbolSize","measureText","scaleX","scaleY","Y0","visCount","lineJoin","beginPath","strokeStyle","dataY","lineTo","stroke","msg","msgWidth","fillStyle","fillText","dense","toString","pow","labelSize","dataX","arc","PI","fill","_labelHeight","bkColor","borderColor","labelColor","date","dateLabel","dateWidth","obj","key","value","color","p","_x","_drawLabelBox","_draw","sb","fillRect","initTransition","textBaseline","_drawControls","trns","trn","performance","now","requestAnimationFrame","e","getBoundingClientRect","type","targetTouches","clientX","clientY","top","event","style","cursor","sbSize","preventDefault","setVisibility","TypeError","k","vis","running","call"],"mappings":"CAAA,WAEA,aAEA,IACCA,EAAOC,KAAKC,IACZC,EAAOF,KAAKG,IACZC,EAASJ,KAAKK,MACdC,EAASN,KAAKO,MACdC,EAAO,SAASC,EAAEC,GAChB,OAAOV,KAAKW,IAAID,GAAKV,KAAKW,IAAIF,IAGjC,SAASG,EAAQC,EAAQC,EAAQC,EAASC,GACzC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,KACtB,IAAXD,EACCH,EAAOM,oBAAoBL,EAAOG,GAAIF,GACtCF,EAAOO,iBAAiBN,EAAOG,GAAIF,GAGvC,IAAIM,EAAW,CACdC,QAAS,EACTC,iBAAkB,IAClBC,gBAAiB,GACjBC,OAAQ,CACPC,WAAY,OACZC,QAAS,UACTC,aAAc,UACdC,YAAa,2BACbC,MAAO,OACPC,gBAAiB,8BAIfC,EAAa,CAChBC,KAAK,EACLC,SAAU,IACVC,GAAI,EACJC,KAAM,EACNC,GAAI,EACJC,IAAK,EACLC,WAAY,MAKb,SAASC,EAAaC,EAAaC,GAalC,GALAC,KAAKD,KAAO,KACZC,KAAKC,MAAQ,GACbD,KAAKE,KAAO,GACZF,KAAKG,QAAUzB,EACfsB,KAAKI,UAAYC,SAASC,eAAeR,IACpCE,KAAKI,UAAW,MAAM,IAAIG,MAAM,8BACrCP,KAAKQ,OAASR,KAAKI,UAAUK,YAAYJ,SAASK,cAAc,WAChEV,KAAKW,IAAMX,KAAKQ,OAAOI,WAAW,MAClCZ,KAAKW,IAAIE,KAAOC,OAAOC,iBAAiBf,KAAKI,UAAW,MAAMS,KAC9Db,KAAKa,KAAOb,KAAKW,IAAIE,KACrBb,KAAKgB,GAAK,EACVhB,KAAKiB,GAAK,EACVjB,KAAKkB,QAAU,EAEflB,KAAKmB,SAAW,CACfC,EAAG,EACHH,GAAI,EACJI,MAAO,GAGRrB,KAAKhB,QAAU,CACdsC,KAAM,EACNC,MAAO,EACPC,OAAQ,IACRC,QAAS,EACTC,EAAG,EACHC,EAAG,EACHV,GAAI,GAGLjB,KAAK4B,aAAe,CACnB5C,QAAS6C,OAAOC,OAAOzC,GACvB0C,MAAOF,OAAOC,OAAOzC,GACrB2C,QAASH,OAAOC,OAAOzC,IAGxBW,KAAKiC,QAAQlC,GAab9B,EAAQ6C,OAAQ,CAAC,SAAS,QAXP,WAClBd,KAAKgB,GAAKhB,KAAKQ,OAAOa,MAASrB,KAAKI,UAAU8B,YAC9ClC,KAAKiB,GAAKjB,KAAKQ,OAAO2B,OAASnC,KAAKI,UAAUgC,aAC9CpC,KAAKhB,QAAQsC,KAAO7D,EAAOuC,KAAKgB,GAAKhB,KAAKhB,QAAQwC,QAClDxB,KAAKhB,QAAQuC,MAAQ9D,EAAOuC,KAAKgB,GAAKhB,KAAKhB,QAAQyC,SACnDzB,KAAKhB,QAAQiC,GAAKxD,EAAOuC,KAAKiB,GAAKjB,KAAKG,QAAQvB,kBAChDoB,KAAKmB,SAASF,IAAMjB,KAAKmB,SAASC,EAAyB,EAArBpB,KAAKG,QAAQxB,UAAc,EAAItB,KAAKO,MAAMoC,KAAKmB,SAASE,MAAMrB,KAAKgB,KACzGhB,KAAKkB,QAAU,EACflB,KAAKqC,QAG0CC,KAAKtC,OACrD/B,EAAQ+B,KAAKQ,OAAQ,CAAC,YAAa,YAAaR,KAAKuC,KAAKD,KAAKtC,OAC/D/B,EAAQ+B,KAAKQ,OAAQ,CAAC,YAAa,cAAeR,KAAKwC,WAAWF,KAAKtC,QAGxE,WAEC,IAAIyC,EAAW,EACXC,EAAW,EACXC,EAAQ,CACXC,KAAM,EACNC,MAAO,EACPvB,KAAM,EACNC,MAAO,EACPuB,OAAQ,KACRC,QAAS,MAGV,SAASC,EAAWC,GAInB,IAHA,IAAIC,EAAK,GAAM7F,KAAK8F,KAAKF,EAAKG,WAAa,GAAK,EAC5CC,EAAI,IAAIC,MAAM,EAAEJ,GAEX5E,EAAI,EAAGA,GAAK2E,EAAKG,WAAY9E,IAAK,CAC1C,IAAId,GAAO,EACX,IAAK,IAAI+F,KAAQN,EAAKhD,MAAO,GAAIgD,EAAKhD,MAAMsD,GAAMC,QAAS,CAC1D,IAAIC,EAASC,EAAWT,EAAKlD,KAAMwD,GACnC/F,EAAMD,EAAKC,EAAKiG,EAAOnF,EAAE,IAE1B+E,EAAE/E,GAAKd,EAGR,IAAKc,EAAI2E,EAAKG,WAAY9E,EAAI,EAAE4E,EAAG5E,IAAK+E,EAAE/E,IAAM,EAChD,IAAKA,EAAI4E,EAAG5E,EAAI,EAAE4E,EAAG5E,IAAK+E,EAAE/E,GAAK+E,EAAE/E,EAAI4E,GACvC,IAAK5E,EAAI4E,EAAI,EAAO,EAAJ5E,EAAOA,IAAK+E,EAAE/E,GAAKf,EAAK8F,EAAE,EAAI/E,GAAI+E,EAAE,EAAI/E,EAAI,IAC5D,OAAO+E,EAgBR,SAASM,EAAUV,EAAMW,GACxB,IAAIlC,EAAIkC,EAAaX,EAAKjE,QAAQ0C,EAAI,EAClCC,EAAIiC,EAAaX,EAAKjE,QAAQ2C,EAAIsB,EAAKG,WAAa,EACxD,OAhBD,SAAkBC,EAAGQ,EAAGC,GACvB,IAAIC,GAAU,EACVb,EAAIG,EAAE9E,OAAS,EAEnB,IADAsF,GAAKX,EAAI,EAAGY,GAAKZ,EAAI,EACdW,GAAKC,GACH,EAAJD,IAAOE,EAASxG,EAAKwG,EAAQV,EAAEQ,KACzB,EAAJC,IAAQC,EAASxG,EAAKwG,EAAQV,EAAES,KACtCD,EAAIlG,GAAQkG,EAAI,GAAK,GACrBC,EAAInG,GAAQmG,EAAI,GAAK,GAEtB,OAAOC,EAMAC,CAASf,EAAK/C,KAAMwB,EAAE,EAAGC,EAAE,GAGnC,SAASsC,EAAgBhB,GACxB,IAAIiB,EAAKjB,EAAKjE,QACVmF,EAAS1G,EAAe,GAARyG,EAAGjD,IACvB,MAAO,CACNlD,EAAGkF,EAAKhC,GAAKiD,EAAGjD,GAAKkD,EAASlB,EAAK9B,SAASF,GAC5CnD,EAAGoG,EAAG5C,KACN8C,EAAGF,EAAG3C,MAAQ2C,EAAG5C,KACjBF,EAAG8C,EAAGjD,GAAc,EAATkD,GAIb,SAASE,EAAapB,GACrB,GAAgB,IAAZA,EAAKjC,GAAT,CACA,IAAIkD,EAAKjB,EAAKjE,QACVsF,EAAYrB,EAAKjC,IAAMiC,EAAKG,WAAa,GAC7Cc,EAAG1C,OAAS0C,EAAG5C,KAAO2B,EAAKjC,GAC3BkD,EAAGzC,QAAUyC,EAAG3C,MAAQ0B,EAAKjC,GAC7BkD,EAAGxC,EAAIjE,EAAOyG,EAAG5C,KAAOgD,GACxBJ,EAAGvC,EAAIlE,EAAOyG,EAAG3C,MAAQ+C,IAG1B,SAASC,EAAiBtB,EAAMuB,GAC/B,IAAIC,EAAMxB,EAAK9C,QAAQxB,QACnBwC,EAAW8B,EAAK9B,SAChBlB,EAAQgD,EAAKhD,MACbnC,EAAI2G,EAAKnG,EAAI,EACbP,EAAIkF,EAAKhC,GAAKE,EAASF,GAAKwD,EAChC,IAAK,IAAIC,KAAOzB,EAAKlD,KAAKE,MACrBnC,EAAImC,EAAMyE,GAAKrD,MAAQoD,EAAMxB,EAAKjC,KACrClD,EAAI2G,EACJ1G,EAAIA,EAAIoD,EAASC,EAAIqD,GAElBD,GAAIA,EAAG,CAAC1G,EAAGA,EAAGC,EAAGA,EAAGqG,EAAGnE,EAAMyE,GAAKrD,MAAOD,EAAGD,EAASC,EAAIqD,GAAMC,GACnE5G,EAAIA,EAAImC,EAAMyE,GAAKrD,MAAQoD,EAC3BnG,IAED,OAAOA,EAGR,SAASqG,EAAQ7G,EAAGC,EAAG+F,GACtB,OAAQA,EAAEhG,GAAKA,GAAKA,GAAKgG,EAAEhG,EAAIgG,EAAEM,GAAKN,EAAE/F,GAAKA,GAAKA,GAAK+F,EAAE/F,EAAI+F,EAAE1C,EAehE,SAASsC,EAAW3D,EAAMwD,GACzB,IAAK,IAAIjF,EAAI,EAAGA,EAAIyB,EAAK6E,QAAQrG,OAAQD,IACxC,GAAIyB,EAAK6E,QAAQtG,GAAG,KAAOiF,EAAM,OAAOxD,EAAK6E,QAAQtG,GAEtD,OAAO,KAuDR,SAASuG,EAAWhE,EAAMiE,EAAOC,GAChC,OAAOlE,EAAKmE,QAAQ,gBAAiB,SAASC,EAAGC,GAAK,OAAQH,EAAK,QAAQ,IAAMI,OAAOA,OAAOD,GAAIJ,GAAO,OAG3G,SAASM,EAAaC,EAAUC,GAC/B,OAAOC,OAAOC,UAAUC,OAAOC,MAAM,IAAKC,KAAKN,GAAY,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,GAAI,IAAIC,IAG/F,SAASM,EAAiBjF,EAAK7C,EAAGC,EAAGqG,EAAGhD,EAAG0C,EAAG+B,GAC7C,IAAIC,EAAU,CAAC,QAAS,UAOxB,OANAD,EAAUA,GAAW,CAAC,EAAG,EAAG,EAAG,GAC/BlF,EAAIoF,OAAOjI,EAAEgG,EAAG/F,GAChB4C,EAAKmF,EAAQD,EAAQ,KAAM/H,EAAEsG,EAAGrG,EAAKD,EAAEsG,EAAGrG,EAAEqD,EAAG0C,GAC/CnD,EAAKmF,EAAQD,EAAQ,KAAM/H,EAAEsG,EAAGrG,EAAEqD,EAAGtD,EAAKC,EAAEqD,EAAG0C,GAC/CnD,EAAKmF,EAAQD,EAAQ,KAAM/H,EAAKC,EAAEqD,EAAGtD,EAAKC,EAAK+F,GAC/CnD,EAAKmF,EAAQD,EAAQ,KAAM/H,EAAKC,EAAKD,EAAEsG,EAAGrG,EAAK+F,GACxCnD,EAoDR,SAASqF,EAAW/C,EAAMlF,EAAGoE,EAAQyB,EAAYqC,EAAWC,EAAMC,GAEjE,IAAIxF,EAAMsC,EAAKtC,IACXyF,EAAazF,EAAI0F,YAAY,KAAKhF,MAClC6E,IAAM/D,EAASA,EAASiE,EAAa,GACzC,IAAIrG,EAAOkD,EAAKlD,KACfE,EAAQgD,EAAKhD,MAEVqB,EAAO,EACVC,EAAQ0B,EAAKjC,GACbU,EAAI,EACJC,EAAIsB,EAAKG,WAAW,EACjBQ,IACHlC,EAAInE,EAAK,EAAG0F,EAAKjE,QAAQ0C,EAAI,GAC7BC,EAAIvE,EAAK6F,EAAKjE,QAAQ2C,EAAI,EAAGsB,EAAKG,WAAW,GAC7C9B,EAAO2B,EAAKjE,QAAQsC,KACpBC,EAAQ0B,EAAKjE,QAAQuC,OAEtB,IAAIF,EAAQ4B,EAAKjC,GAChBsD,EAAYjD,GAAS4B,EAAKG,WAAa,GAGvCkD,EAAU,GADA/E,EAAQF,EADTC,EAAOD,GAGhBkF,EAASpE,EAASgE,EAClBK,EAAKzI,EAAIoE,EACTsE,EAAW,EAKZ,IAAK,IAAIlD,KAHT5C,EAAIsF,UAAYA,EAChBtF,EAAI+F,SAAW,QACf/F,EAAIE,KAAOoC,EAAKpC,KACCZ,EAAO,GAAIA,EAAMsD,GAAMC,QAAS,CAChDiD,IACA9F,EAAIgG,YACJhG,EAAIiG,YAAc7G,EAAKjB,OAAOyE,GAG9B,IAFA,IAAIsD,EAAQnD,EAAW3D,EAAMwD,GAEpBjF,EAAIoD,EAAGpD,GAAKqD,EAAGrD,IAAKqC,EAAImG,QAC/BxI,EAAIgG,EAAYhD,GAAQgF,EACzBE,EAAKK,EAAMvI,EAAE,GAAKiI,GAEnB5F,EAAIoG,SAGL,GAAIb,GAAqB,IAAbO,EAAgB,CAC3B,IAAIO,EAAM,qBACNC,EAAWtG,EAAI0F,YAAYW,GAAK3F,MAIpC,OAHAV,EAAIuG,UAAYjE,EAAK9C,QAAQrB,OAAOK,MACpCwB,EAAIE,KAAOgE,EAAWlE,EAAIE,KAAM,GAAG,QACnCF,EAAIwG,SAASH,EAAK3F,EAAM,EAAE4F,EAAS,EAAI9E,EAAO,GAI/C,GAAK+D,EAAL,CAEAvF,EAAIsF,UAAY,GAChBtF,EAAIgG,YACJhG,EAAIiG,YAAc,OAClBjG,EAAIuG,UAAYjE,EAAK9C,QAAQrB,OAAOK,MACpC,IAAIiI,EAAQ3J,EAAOF,EAAK,EAAGM,EAAK,EAAIsE,EAAS,EAAIoE,KAEjD,IADIjI,EAAI,EACDA,EAAI6H,GAAM,CACZpI,EAAIO,EAAIiI,EACZ5F,EAAIoF,OAAO,EAAGS,EAAKzI,GACnB4C,EAAImG,OAAOzF,EAAOmF,EAAKzI,GACvB4C,EAAIwG,SAAS1J,EAAOa,GAAG+I,WAAY,EAAGb,EAAKzI,GAC3CO,GAAKjB,KAAKiK,IAAI,EAAGF,GAElBzG,EAAIoG,SASJ,IALA,IAIW5H,EAAOiF,EAJdmD,EAAY9J,EAAoB,EAAb2I,GAIFoB,GAHjBJ,EAAQ3J,EAAOF,EAAK,EAAGM,EAAK,EAAG0J,GAAajD,EAAYgC,MAGxDhI,EAAI,EAAqBoF,EAAW3D,EAAM,MACvCzB,EAAIqD,GAAG,CAELyE,GADJtI,GAAKQ,EAAIgG,EAAYhD,GAAQgF,KAEhCnH,EAAQiG,EAAaoC,EAAMlJ,EAAE,GAAI,GACjC8F,EAAIzD,EAAI0F,YAAYlH,GAAOkC,MAC3BV,EAAIwG,SAAShI,EAAO1B,EAAOK,EAAIsG,EAAI,GAAIoC,EAAKJ,EAAa,IAE1D9H,GAAKjB,KAAKiK,IAAI,EAAGF,GAIlB,IAAqB,IAAjBnE,EAAK/B,OAAe,CACnB5C,EAAIb,GAAQ6D,EAAOgF,EAASrD,EAAK/B,SAAWoF,EAAShC,IACzD3D,EAAIgG,YACJhG,EAAIiG,YAAc,OAClBjG,EAAIsF,UAAY,GAChB,IAAInI,EAAIQ,EAAIgG,EAAYgC,EAAShF,EAAOgF,EAMxC,IAAK,IAAI/C,KALT5C,EAAIoF,OAAOjI,EAAgB,EAAbsI,GACdzF,EAAImG,OAAOhJ,EAAGqE,GACdxB,EAAIoG,SAEJpG,EAAIsF,UAAYA,EACChG,EAAO,GAAIA,EAAMsD,GAAMC,QAAS,CAC5CqD,EAAQnD,EAAW3D,EAAMwD,GAC7B5C,EAAIgG,YACJhG,EAAIiG,YAAc7G,EAAKjB,OAAOyE,GAC9B5C,EAAIuG,UAAYjE,EAAK9C,QAAQrB,OAAOC,WAChChB,EAAIyI,EAAKK,EAAMvI,EAAE,GAAKiI,EAC1B5F,EAAI8G,IAAI3J,EAAGC,EAAG,EAAG,EAAG,EAAEV,KAAKqK,IAAI,GAC/B/G,EAAIgH,OACJhH,EAAIoG,UA3JP,SAAuBpG,EAAK7C,EAAGiC,EAAMyD,EAASlF,EAAGsJ,EAAcC,EAASC,EAAaC,EAAY/G,GAEhG,IACIgH,EAAOtE,EAAW3D,EAAM,KAAKzB,GAC7B2J,EAAY7C,EAAa4C,EAAM,GAAK,KAAO5C,EAAa4C,EAAM,GAC9DE,EAAYvH,EAAI0F,YAAY4B,GAAW5G,MACvC8G,EAAM,GACN9G,EAAQ,EACZ,IAAK,IAAI+G,KAAOrI,EAAKE,MAChBuD,EAAQ4E,GAAK5E,UAChB2E,EAAIC,GAAO,GACXD,EAAIC,GAAK7E,KAAOxD,EAAKE,MAAMmI,GAC3BD,EAAIC,GAAKC,MAAQ3E,EAAW3D,EAAMqI,GAAK9J,GACvC6J,EAAIC,GAAK/G,MAAQ9D,EAAKoD,EAAI0F,YAAY8B,EAAIC,GAAK7E,MAAMlC,MAAOV,EAAI0F,YAAY8B,EAAIC,GAAKC,OAAOhH,OAC5F8G,EAAIC,GAAKE,MAAQvI,EAAKjB,OAAOsJ,GAC7B/G,GAAS8G,EAAIC,GAAK/G,MAbZ,KAiBRvD,IADAuD,EAAQ9D,EAAK2K,EAAW7G,GAhBhB,IAiBQ,GACR,IAAGvD,EAAI,GACCkD,EAAZlD,EAAIuD,IAAYvD,EAAIkD,EAAKK,GAE7BV,EAAIuG,UAAYW,EAChBlH,EAAIiG,YAAckB,EAClBnH,EAAIgG,YACJf,EAAiBjF,EAAK7C,EAAG,EAAGuD,EAAsB,EAAfuG,EAxB3B,GAwBiD,GAAGD,OAC5DhH,EAAIoG,SAEJpG,EAAIuG,UAAYa,EAChBpH,EAAIgG,YACJhG,EAAIwG,SAASc,EAAWnK,EAAIuD,EAAM,EAAI6G,EAAU,EAAGN,EAAeW,GAElE,IAAInE,EAAI,EAAGoE,EAAK1K,EACZ+C,EAAOF,EAAIE,KACXkE,EAAOF,EAAWlE,EAAIE,KAAM,GAAG,GACnC,IAAKuH,KAAOD,EACXxH,EAAIuG,UAAYiB,EAAIC,GAAKE,MACzBlE,EAAI+D,EAAIC,GAAK/G,MACbV,EAAIE,KAAOkE,EACXpE,EAAIwG,SAASgB,EAAIC,GAAKC,MAAQG,EAtCvB,GAsC4C,EAAbZ,EAtC/B,IAuCPjH,EAAIE,KAAOA,EACXF,EAAIwG,SAASgB,EAAIC,GAAK7E,KAAQiF,EAxCvB,GAwC4C,EAAbZ,EAxC/B,GAwCkD,KACzDY,EAAKA,EAAKpE,EAAI,GAEfzD,EAAIgH,OAiHHc,CAAc9H,EAAK7C,EAAGiC,EAAMkD,EAAKhD,MAAO3B,EAAE,EAAgB,IAAb8H,EAAmBnD,EAAK9C,QAAQrB,OAAOM,gBAAiB6D,EAAK9C,QAAQrB,OAAOE,QAASiE,EAAK9C,QAAQrB,OAAOK,MAAOkC,KAwE/J,SAASqH,IACR,IApEqBzF,EACjBtC,EACAgI,EACA7J,EACAgF,EAgEAnD,EAAMX,KAAKW,IACfA,EAAIuG,UAAYlH,KAAKG,QAAQrB,OAAOC,WACpC4B,EAAIiI,SAAS,EAAG,EAAG5I,KAAKgB,GAAIhB,KAAKiB,IACjCN,EAAIE,KAAOb,KAAKa,KACO,IAAnBb,KAAKhB,QAAQ2C,IAChB0C,EAAarE,MACbA,KAAK6I,eAAe,QAAS,UAAWlF,EAAS3D,MAAM,KA7CzD,SAAuBiD,GACtB,IAAItC,EAAMsC,EAAKtC,IACfA,EAAIE,KAAOgE,EAAW5B,EAAKpC,KAAM,GACjC,IAAId,EAAOkD,EAAKlD,KAChBwE,EAAiBtB,EAAM,SAASa,EAAGY,GAClC/D,EAAIgG,YACJhG,EAAIuG,UAAYjE,EAAK9C,QAAQrB,OAAOE,QACpC2B,EAAIiG,YAAc,OAClBjG,EAAIsF,UAAY,GAChBL,EAAiBjF,EAAKmD,EAAEhG,EAAGgG,EAAE/F,EAAG+F,EAAEM,EAAGN,EAAE1C,EAAG0C,EAAE1C,EAAE,GAAGuG,OACjDhH,EAAIoG,SACJpG,EAAImI,aAAe,SACf7F,EAAKhD,MAAMyE,GAAKlB,SACnB7C,EAAIgG,YACJhG,EAAIuG,UAAYnH,EAAKjB,OAAO4F,GAC5B/D,EAAI8G,IAAI3D,EAAEhG,EAAIgG,EAAE1C,EAAE,EAAG0C,EAAE/F,EAAE+F,EAAE1C,EAAE,EAAG0C,EAAE1C,EAAE,EAAG,EAAG,EAAE/D,KAAKqK,IAAI,GACrD/G,EAAIgH,OAEJhH,EAAIE,KAAOgE,EAAW5B,EAAKpC,KAAM,GAAG,GACpCF,EAAIgG,YACJhG,EAAIuG,UAAY,OAChBvG,EAAIwG,SAAS,IAAWrD,EAAEhG,EAAQ,IAAJgG,EAAE1C,EAAQ0C,EAAE/F,EAAQ,IAAJ+F,EAAE1C,GAChDT,EAAIE,KAAOgE,EAAW5B,EAAKpC,KAAM,KAEjCF,EAAIgG,YACJhG,EAAIsF,UAAY,EAChBtF,EAAIiG,YAAc7G,EAAKjB,OAAO4F,GAC9B/D,EAAI8G,IAAI3D,EAAEhG,EAAIgG,EAAE1C,EAAE,EAAG0C,EAAE/F,EAAE+F,EAAE1C,EAAE,EAAG0C,EAAE1C,EAAE,EAAG,EAAG,EAAE/D,KAAKqK,IAAI,GACrD/G,EAAIoG,UAELpG,EAAIuG,UAAYnH,EAAKjB,OAAO4F,GAC5B/D,EAAIgG,YACJhG,EAAIwG,SAASpH,EAAKE,MAAMyE,GAAMZ,EAAEhG,EAAIgG,EAAE1C,EAAI0C,EAAE/F,EAAI+F,EAAE1C,EAAE,GACpDT,EAAImI,aAAe,WAepBC,CAAc/I,MA5EVW,GADiBsC,EA8ERjD,MA7EEW,IACXgI,EAAK1F,EAAK9C,QAAQtB,gBAClBC,EAASmE,EAAK9C,QAAQrB,OACtBgF,EAAIG,EAAgBhB,GAExBtC,EAAIgG,YACJhG,EAAIuG,UAAYpI,EAAOE,QACvB2B,EAAIiI,SAAS,EAAG9E,EAAE/F,EAAG+F,EAAEhG,EAAI6K,EAAI7E,EAAE1C,GACjCT,EAAIiI,SAAS9E,EAAEhG,EAAIgG,EAAEM,EAAIuE,EAAI7E,EAAE/F,EAAGkF,EAAKjC,GAAK8C,EAAEhG,EAAIgG,EAAEM,EAAIuE,EAAK7E,EAAE1C,GAE/DT,EAAIuG,UAAYpI,EAAOG,aACvB2G,EAAiBjF,EAAKmD,EAAEhG,EAAcgG,EAAE/F,EAAG4K,EAAI7E,EAAE1C,EAAG,EAAG,CAAC,EAAE,EAAE,EAAE,IAC9DwE,EAAiBjF,EAAKmD,EAAEhG,EAAIgG,EAAEM,EAAIuE,EAAI7E,EAAE/F,EAAG4K,EAAI7E,EAAE1C,EAAG,EAAG,CAAC,EAAE,EAAE,EAAE,IAC9DT,EAAIgH,OACJhH,EAAIiI,SAAS9E,EAAEhG,EAAI6K,EAAI7E,EAAE/F,EAAG+F,EAAEM,EAAK,EAAHuE,EAAM,GACtChI,EAAIiI,SAAS9E,EAAEhG,EAAI6K,EAAI7E,EAAE/F,EAAE+F,EAAE1C,EAAE,EAAG0C,EAAEM,EAAK,EAAHuE,EAAM,GAE5C3C,EAAW/C,EAAKa,EAAE/F,EAAG+F,EAAE1C,GAAG,EAAO,GAAG,EAAOuC,EAASV,GAAM,IAGvC,IAAfN,EAAMC,OACTjC,EAAIgG,YACJhG,EAAIuG,UAAYpI,EAAOI,YACtByB,EAAI8G,IAAI3D,EAAEhG,EAAI,CAAC,EAAG6K,EAAG,EAAG7E,EAAEM,EAAEuE,EAAG,EAAG7E,EAAEM,EAAE,GAAGzB,EAAMC,MAAOkB,EAAE/F,EAAI+F,EAAE1C,EAAE,EAAG6B,EAAKrB,aAAa5C,QAAQW,IAAO,EAAG,EAAEtC,KAAKqK,IAAI,GACnH/G,EAAIgH,QAwDL3B,EAAWhG,KAAM,EADTvC,EAAOuC,KAAKiB,GAAKjB,KAAKhB,QAAQiC,GAAKjB,KAAKmB,SAASF,KAClC,EAAM,GAAG,EAAMjB,KAAK4B,aAAaG,MAAMpC,KAE9D,IAAImE,EAAI9D,KAAK4B,aAAaI,QAAQrC,IAC1B,EAAJmE,IACHnD,EAAIgG,YACJhG,EAAIuG,UAAYlH,KAAKG,QAAQrB,OAAOI,YACpCyB,EAAI8G,IAAIhF,EAAUC,EAAUoB,EAAK,EAAG,EAAEzG,KAAKqK,IAAI,GACvC,GAAJ5D,GAAQnD,EAAI8G,IAAIhF,EAAUC,EAAUoB,EAAE,GAAM,EAAG,EAAEzG,KAAKqK,IAAI,GAC9D/G,EAAIgH,QAnUN,SAAsBqB,GACrB,IAAIjF,GAAS,EACb,IAAK,IAAIqE,KAAOY,EAAM,CACrB,IAAIC,EAAMD,EAAKZ,GACfrE,EAASA,GAAUkF,EAAI3J,IAEnB2J,EAAI3J,MACP2J,EAAItJ,IAAMsJ,EAAIxJ,MAAQwJ,EAAIvJ,GAAKuJ,EAAIxJ,MAAQwJ,EAAI1J,UAAY2J,YAAYC,MAAQF,EAAIzJ,KAC9EyJ,EAAIvJ,GAAKuJ,EAAIxJ,MAAQwJ,EAAItJ,KAAOsJ,EAAIvJ,IAAQuJ,EAAIvJ,GAAKuJ,EAAIxJ,MAAQwJ,EAAItJ,KAAOsJ,EAAIvJ,IAAOuJ,EAAIvJ,KAAOuJ,EAAIxJ,QAC1GwJ,EAAI3J,KAAM,EACV2J,EAAItJ,IAAMsJ,EAAIvJ,GACVuJ,EAAIrJ,YAAYqJ,EAAIrJ,eAI3B,OAAOmE,EAuTHnC,CAAa5B,KAAK4B,eAAe5B,KAAKqC,OAM3CrC,KAAKqC,KAAO,WACX+G,sBAAsBV,EAAMpG,KAAKtC,QAGlCA,KAAKuC,KAAO,SAAS8G,GACpB,IAAIvF,EAAIuF,EAAEnL,OAAOoL,wBACF,eAAXD,EAAEE,OAAuBF,EAAIA,EAAEG,cAAc,IACjD,IAAI1L,EAAIuL,EAAEI,QAAU3F,EAAExC,KAAU+H,EAAEK,QAAU5F,EAAE6F,IACrC3J,KAAKiB,GAAKjB,KAAKhB,QAAQiC,GAAKjB,KAAKmB,SAASF,KAClDjB,KAAKkB,OAASpD,EACdkC,KAAKqC,SAIPrC,KAAKwC,WAAa,SAAS6G,GAC1B,IAAI1G,EAAMG,SAAUH,EAAMI,QAA1B,CACA,IA/W2BE,EAAMnF,EAAGC,EAChC+F,EACA6E,EA6WA7E,EAAIuF,EAAEnL,OAAOoL,wBACbM,EAAQP,EAMZ,GALe,eAAXA,EAAEE,OAAuBF,EAAIA,EAAEG,cAAc,IACjD/G,EAAW4G,EAAEI,QAAU3F,EAAExC,KACzBoB,EAAW2G,EAAEK,QAAU5F,EAAE6F,IAEzBhH,EAAMC,MArX2B9E,EAqXK2E,EArXF1E,EAqXY2E,EApX5CoB,EAAIG,EADmBhB,EAqXKjD,MAnX5B2I,EAAK1F,EAAK9C,QAAQtB,gBAClBd,EAAI+F,EAAE/F,EAAU,EAChB4G,EAAQ7G,EAAGC,EAAG+F,GACbhG,EAAIgG,EAAEhG,EAAI6K,EAAW,EACrB7K,EAAIgG,EAAEhG,EAAIgG,EAAEM,EAAIuE,EAAW,EACxB,EAED,GA6WU,EAAbhG,EAAMC,KACTgH,EAAM1L,OAAO2L,MAAMC,OAAS,WAC5BnH,EAAME,MAAQwG,EAAEI,QAChB9G,EAAMrB,KAAOtB,KAAKhB,QAAQsC,KAC1BqB,EAAMpB,MAAQvB,KAAKhB,QAAQuC,MAC3BoB,EAAMG,OAtVR,SAAkBuG,GACjBrJ,KAAKkB,QAAU,EACf,IAAI4D,EAAQ,EACRuE,IACY,cAAXA,EAAEE,OAAsBF,EAAIA,EAAEG,cAAc,IAC/C1E,EAAQuE,EAAEI,QAAU9G,EAAME,OAE5B,IAAIqB,EAAKlE,KAAKhB,QACV+K,EAAS/J,KAAKG,QAAQtB,gBAET,EAAb8D,EAAMC,OAAUkC,GAASA,GACZ,EAAbnC,EAAMC,OACTsB,EAAG5C,KAAOqB,EAAMrB,KAAOwD,EACvBZ,EAAG5C,KAAO/D,EAAK2G,EAAG5C,KAAM,GACxB4C,EAAG5C,KAAOlE,EAAK8G,EAAG5C,KAAM4C,EAAG3C,MAAiB,EAATwI,EAAa,IAEhC,EAAbpH,EAAMC,OACTsB,EAAG3C,MAAQoB,EAAMpB,MAAQuD,EACzBZ,EAAG3C,MAAQnE,EAAK8G,EAAG3C,MAAOvB,KAAKgB,GAAK,GACpCkD,EAAG3C,MAAQhE,EAAK2G,EAAG3C,MAAO2C,EAAG5C,KAAgB,EAATyI,EAAa,IAElD1F,EAAarE,MACbA,KAAK6I,eAAe,QAAS,UAAWlF,EAAS3D,MAAM,KAgU9BsC,KAAKtC,MAC7B2C,EAAMI,QA9TR,SAAmBsG,GACF,cAAXA,EAAEE,OAAsBF,EAAEnL,OAAO2L,MAAMC,OAAO,WACnD7L,EAAQoC,SAAU,CAAC,YAAa,aAAcsC,EAAMG,QAAQ,GAC5D7E,EAAQoC,SAAU,CAAC,UAAW,YAAasC,EAAMI,SAAS,GAC1DJ,EAAMG,OAAS,KACfH,EAAMI,QAAU,KAChB/C,KAAK6I,eAAe,UAAW,UAAW,EAAG,WAAWlG,EAAMC,KAAO,KAwT1CN,KAAKtC,MAC/B/B,EAAQoC,SAAU,CAAC,YAAa,aAAcsC,EAAMG,QACpD7E,EAAQoC,SAAU,CAAC,UAAW,YAAasC,EAAMI,SACjD/C,KAAK6I,eAAe,UAAW,UAAWpL,EAAuB,IAAhBuC,KAAKhB,QAAQiC,SACxD,CACN,IAAIgC,EAAOjD,KACXuE,EAAiBvE,KAAM,SAAS8D,EAAGY,GAC9BC,EAAQlC,EAAUC,EAAUoB,KAC/B8F,EAAMI,iBACN/G,EAAKgH,cAAcvF,GACnBzB,EAAK4F,eAAe,UAAW,UAAW,GAAI,WAAc5F,EAAKrB,aAAaI,QAAQrC,IAAM,GAAG2C,KAAKW,UAOxGjD,KAAKiC,QAAU,SAASlC,GACvBC,KAAKD,KAAOA,EACZ,IACCC,KAAKoD,WAAarD,EAAK6E,QAAQ,GAAGrG,OAAS,EAC1C,MAAO8K,GACR,MAAM,IAAIa,UAAU,gCAErB,IAAIvJ,EAAMX,KAAKW,IAKf,IAAK,IAAIwJ,KAJTxJ,EAAIE,KAAOgE,EAAW7E,KAAKa,KAAM,GAAG,GACpCb,KAAKmB,SAASC,EAAI3D,EAAoC,IAA7BkD,EAAI0F,YAAY,KAAKhF,OAC9CrB,KAAKmB,SAASE,MAAQ,EACtBrB,KAAKC,MAAQ,GACCF,EAAKE,MAAO,CACzB,IAAImE,EAAIzD,EAAI0F,YAAYtG,EAAKE,MAAMkK,IAAI9I,MAAQrB,KAAKmB,SAASC,EAA2B,EAAvBpB,KAAKG,QAAQxB,QAC9EqB,KAAKmB,SAASE,OAAS+C,EACvBpE,KAAKC,MAAMkK,GAAK,CACf3G,SAAS,EACTnC,MAAO+C,EAAIpE,KAAKG,QAAQxB,SAG1BqB,KAAKE,KAAO8C,EAAWhD,MACvBA,KAAK6I,eAAe,QAAS,UAAWlF,EAAS3D,MAAM,KAGxDA,KAAKiK,cAAgB,SAASvF,EAAK0F,GAClCpK,KAAKC,MAAMyE,GAAKlB,aAA0B,IAAR4G,GAAuBpK,KAAKC,MAAMyE,GAAKlB,QAAU4G,EACnFpK,KAAKE,KAAO8C,EAAWhD,MACvBA,KAAK6I,eAAe,QAAS,UAAWlF,EAAS3D,MAAM,KAGxDA,KAAK6I,eAAiB,SAAST,EAAK3I,EAAMC,EAAIE,GAC7C,IAAIoJ,EAAOhJ,KAAK4B,aACZqH,EAAMD,EAAKZ,GACfa,EAAIxJ,KAAiB,YAATA,EAAoBwJ,EAAItJ,IAAKF,EACzCwJ,EAAItJ,IAAMsJ,EAAIxJ,KACdwJ,EAAIvJ,GAAKA,EACTuJ,EAAIzJ,GAAK0J,YAAYC,MACrBF,EAAIrJ,WAAaA,EACjB,IAAIyK,GAAU,EACd,IAAK,IAAIF,KAAKnB,EAAMqB,EAAUA,GAAWrB,EAAKmB,GAAG7K,IAC5C+K,GAASrK,KAAKqC,OACnB4G,EAAI3J,KAAM,KAITgL,KAAKzK,EAAa2F,WAEC,oBAAX1E,SAAwBA,OAAOjB,aAAeA,GAtoBzD","sourcesContent":["(function() {\n\n'use strict'\n\nvar \n\t_min = Math.min, \n\t_max = Math.max,\n\t_round = Math.round,\n\t_floor = Math.floor,\n\t_log = function(x,y) {\n\t\t return Math.log(y) / Math.log(x)\n\t}\n\nfunction _listen(target, events, handler, listen) {\n\tfor (var i = 0; i < events.length; i++)\t\n\t\t(listen === false)\n\t\t? target.removeEventListener(events[i], handler)\n\t\t: target.addEventListener(events[i], handler)\n}\n\nvar defaults = {\n\tpadding: 5,\n\tminimapHeightRel: 0.14,\n\tminimapBandSize: 12,\n\tcolors: {\n\t\tbackground: '#fff',\n\t\tminimap: '#f4f8ff',\n\t\tminimapFrame: '#c8dde8',\n\t\tminimapDrag: 'rgba(175, 175, 210, 0.2)',\n\t\tlabel: '#666',\n\t\tlabelBackground: 'rgba(240, 240, 250, 0.82)'\n\t}\n}\n\nvar transition = {\n\trun: false,\n\tduration: 200,\n\tts: 0,\n\tfrom: 0,\n\tto: 0,\n\tpos: 0,\n\tonComplete: null\n}\n\n// ----------------------------------------------\n\nfunction VanillaChart(containerId, data) {\n/*\n\tthe data contract is:\n\t\tcolors: {y0: \"#3DC23F\", y1: \"#F34C44\"}\n\t\tcolumns: (3) [Array(113), Array(113), Array(113)]\n\t\tnames: {y0: \"#0\", y1: \"#1\"}\n\t\ttypes: {y0: \"line\", y1: \"line\", x: \"x\"}\n*/\n\tthis.data = null\n\tthis.names = {}\n\tthis.tree = [] // segment tree\n\tthis.options = defaults\n\tthis.container = document.getElementById(containerId)\n\tif (!this.container) throw new Error('chart container not found!')\n\tthis.canvas = this.container.appendChild(document.createElement('canvas'))\n\tthis.ctx = this.canvas.getContext('2d')\n\tthis.ctx.font = window.getComputedStyle(this.container, null).font\n\tthis.font = this.ctx.font\n\tthis.vw = 0\n\tthis.vh = 0\n\tthis.select = -1\n\n\tthis.controls = {\n\t\th: 0,\n\t\tvh: 0,\n\t\twidth: 0\n\t}\n\n\tthis.minimap = {\n\t\tleft: 0,\n\t\tright: 0,\n\t\trlLeft: 0.75,\n\t\trlRight: 1,\n\t\ta: 0,\n\t\tb: 0,\n\t\tvh: 0\n\t}\n\n\tthis._transitions = {\n\t\tminimap: Object.create(transition),\n\t\tgraph: Object.create(transition),\n\t\tpointer: Object.create(transition)\n\t}\n\n\tthis.setData(data)\n\n\tvar _justifySize = function() {\n\t\tthis.vw = this.canvas.width  = this.container.clientWidth\n\t\tthis.vh = this.canvas.height = this.container.clientHeight\n\t\tthis.minimap.left = _round(this.vw * this.minimap.rlLeft)\n\t\tthis.minimap.right = _round(this.vw * this.minimap.rlRight)\n\t\tthis.minimap.vh = _round(this.vh * this.options.minimapHeightRel)\n\t\tthis.controls.vh = (this.controls.h + this.options.padding*2) * (1 + Math.floor(this.controls.width/this.vw))\n\t\tthis.select = -1\n\t\tthis.draw()\n\t}\n\n\t_listen(window, ['resize','load'], _justifySize.bind(this))\n\t_listen(this.canvas, ['mousemove', 'toucmove'], this.move.bind(this))\n\t_listen(this.canvas, ['mousedown', 'touchstart'], this.mousetouch.bind(this))\n}\n\n(function() {\n\t// helpers (a spike of private data/methods ):\n\tvar pointerX = 0\n\tvar pointerY = 0\n\tvar _drag = {\n\t\tmode: 0,\n\t\tstart: 0,\n\t\tleft: 0,\n\t\tright: 0,\n\t\trunBnd: null,\n\t\tdoneBnd: null\n\t}\n\t\n\tfunction _buildTree(self) { // build segment tree (with max)\n\t\tvar n = (1 << (Math.log2(self.dataLength - 1) + 1))\n\t\tvar T = new Array(2*n)\n\n\t\tfor (var i = 0; i <= self.dataLength; i++) {\n\t\t\tvar max = -1\n\t\t\tfor (var name in self.names) if (self.names[name].visible) {\n\t\t\t\tvar column = _getColumn(self.data, name)\n\t\t\t\tmax = _max(max, column[i+1])\n\t\t\t}\n\t\t\tT[i] = max\n\t\t}\n\n\t\tfor (i = self.dataLength; i < 2*n; i++) T[i] = -1\n\t\tfor (i = n; i < 2*n; i++) T[i] = T[i - n]\n\t\tfor (i = n - 1; i > 0; i--)\tT[i] = _max(T[2 * i], T[2 * i + 1])\n\t\treturn T\n\t}\n\t\n\tfunction _treeMax(T, l, r) {\n\t\tvar result = -1\n\t\tvar n = T.length / 2\n\t\tl += n - 1, r += n - 1\n\t\twhile (l <= r) {\n\t\t\tif (l & 1) result = _max(result, T[l])\n\t\t\tif (!(r & 1)) result = _max(result, T[r])\n\t\t\tl = _floor((l + 1) / 2)\n\t\t\tr = _floor((r - 1) / 2)\n\t\t}\t\t\n\t\treturn result\n\t}\n\n\tfunction _getMaxY (self, useMinimap) {\n\t\tvar a = useMinimap ? self.minimap.a : 0\n\t\tvar b = useMinimap ? self.minimap.b : self.dataLength - 1\n\t\treturn _treeMax(self.tree, a+1, b+1)\n\t}\n\n\tfunction _getMinimapRect(self) {\n\t\tvar mm = self.minimap\n\t\tvar margin = _round(mm.vh * 0.10)\n\t\treturn {\n\t\t\ty: self.vh - mm.vh + margin - self.controls.vh,\n\t\t\tx: mm.left,\n\t\t\tw: mm.right - mm.left,\n\t\t\th: mm.vh - margin * 2\n\t\t}\n\t}\n\n\tfunction _calcMinimap(self) {\n\t\tif (self.vw === 0) return\n\t\tvar mm = self.minimap\n\t\tvar scaleView = self.vw / (self.dataLength - 1)\n\t\tmm.rlLeft = mm.left / self.vw\n\t\tmm.rlRight = mm.right / self.vw\n\t\tmm.a = _round(mm.left / scaleView)\n\t\tmm.b = _round(mm.right / scaleView)\n\t}\n\n\tfunction _iterateControls(self, cb) {\n\t\tvar pad = self.options.padding\n\t\tvar controls = self.controls\n\t\tvar names = self.names\n\t\tvar x = pad, i = 0\n\t\tvar y = self.vh - controls.vh + pad\n\t\tfor (var col in self.data.names) {\n\t\t\tif (x + names[col].width + pad > self.vw) {\n\t\t\t\tx = pad\n\t\t\t\ty = y + controls.h + pad\n\t\t\t}\n\t\t\tif (cb) cb({x: x, y: y, w: names[col].width, h: controls.h - pad}, col)\n\t\t\tx = x + names[col].width + pad\n\t\t\ti++\n\t\t}\n\t\treturn i\n\t}\n\n\tfunction _inRect(x, y, r) {\n\t\treturn (r.x <= x && x <= r.x + r.w && r.y <= y && y <= r.y + r.h)\n\t}\n\n\tfunction _getPointingRegion(self, x, y) {\n\t\tvar r = _getMinimapRect(self)\n\t\tvar sb = self.options.minimapBandSize\n\t\tif (y < r.y) return 7\n\t\tif (_inRect(x, y, r)) {\n\t\t\tif (x < r.x + sb)\treturn 1\n\t\t\tif (x > r.x + r.w - sb)\treturn 2\n\t\t\treturn 3\n\t\t}\n\t\treturn 0\n\t}\n\n\tfunction _getColumn(data, name) {\n\t\tfor (var i = 0; i < data.columns.length; i++) {\n\t\t\tif (data.columns[i][0] === name) return data.columns[i]\n\t\t}\n\t\treturn null\n\t}\n\n\tfunction _transitions(trns) {\n\t\tvar result = false\n\t\tfor (var key in trns) {\n\t\t\tvar trn = trns[key]\n\t\t\tresult = result || trn.run\n\t\t\t// linear duration(ms) based transition \n\t\t\tif (trn.run) {\n\t\t\t\ttrn.pos = trn.from + (trn.to - trn.from) / trn.duration * (performance.now() - trn.ts) \n\t\t\t\tif ((trn.to > trn.from && trn.pos >= trn.to) || (trn.to < trn.from && trn.pos <= trn.to) || trn.to === trn.from  ) {\n\t\t\t\t\ttrn.run = false\n\t\t\t\t\ttrn.pos = trn.to\n\t\t\t\t\tif (trn.onComplete) trn.onComplete()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result\n\t} //_transitions\n\n\tfunction _dragRun(e) {\n\t\tthis.select = -1\n\t\tvar delta = 0\n\t\tif (e) {\n\t\t\tif (e.type === 'touchmove') e = e.targetTouches[0]\n\t\t \tdelta = e.clientX - _drag.start\n\t\t}\n\t\tvar mm = this.minimap\n\t\tvar sbSize = this.options.minimapBandSize\n\t\t\n\t\tif (_drag.mode & 4) delta = -delta //drag by body - reversal\n\t\tif (_drag.mode & 1) {\n\t\t\tmm.left = _drag.left + delta\n\t\t\tmm.left = _max(mm.left, 1)\n\t\t\tmm.left = _min(mm.left, mm.right - sbSize * 2 - 1)\n\t\t}\n\t\tif (_drag.mode & 2) {\n\t\t\tmm.right = _drag.right + delta \n\t\t\tmm.right = _min(mm.right, this.vw - 1)\n\t\t\tmm.right = _max(mm.right, mm.left + sbSize * 2 + 1)\n\t\t}\n\t\t_calcMinimap(this)\n\t\tthis.initTransition('graph', 'current', _getMaxY(this, true) )\n\t}\n\n\tfunction _dragDone(e) {\n\t\t if (e.type !== 'touchmove') e.target.style.cursor='default'\n\t\t_listen(document, ['mousemove', 'touchmove'], _drag.runBnd, false)\n\t\t_listen(document, ['mouseup', 'touchend'], _drag.doneBnd, false)\n\t\t_drag.runBnd = null\n\t\t_drag.doneBnd = null\n\t\tthis.initTransition('minimap', 'current', 0, function(){_drag.mode = 0} )\n\t}\n\n\tfunction _fontShift(font, delta, bold) {\n\t\treturn font.replace(/(\\d*\\.?\\d+)px/, function(m, p1) {return (bold?'bold ':'') + Number(Number(p1)+delta)+'px' } )\n\t}\n\n\tfunction _getDateText(unixDate, part) {\n\t\treturn String.prototype.substr.apply((new Date(unixDate)), [[0, 3], [4, 11],\t[4, 6],\t[11, 4]][part])\n\t}\n\n\tfunction _drawRoundedRect(ctx, x, y, w, h, r, corners) {\n\t\tvar methods = ['arcTo', 'lineTo']\n\t\tcorners = corners || [0, 0, 0 ,0]\n\t\tctx.moveTo(x+r, y)\n\t\tctx[ methods[corners[0]] ](x+w, y,   x+w, y+h, r) \n\t\tctx[ methods[corners[1]] ](x+w, y+h, x,   y+h, r)\n\t\tctx[ methods[corners[2]] ](x,   y+h, x,   y,   r)\n\t\tctx[ methods[corners[3]] ](x,   y,   x+w, y,   r)\n\t\treturn ctx\n\t}\n\n\tfunction _drawLabelBox(ctx, x, data, visible, i, _labelHeight, bkColor, borderColor, labelColor, vw) {\n\t// displays info for 1, 2 and more named columns\n\t\tvar p = 10\n\t\tvar date = _getColumn(data, 'x')[i]\n\t\tvar dateLabel = _getDateText(date, 0) + ', ' + _getDateText(date, 2)\n\t\tvar dateWidth = ctx.measureText(dateLabel).width\n\t\tvar obj = {}\n\t\tvar width = 0\n\t\tfor (var key in data.names) {\n\t\t\tif (visible[key].visible) {\n\t\t\t\tobj[key] = {}\n\t\t\t\tobj[key].name = data.names[key]\n\t\t\t\tobj[key].value = _getColumn(data, key)[i]\n\t\t\t\tobj[key].width = _max(ctx.measureText(obj[key].name).width, ctx.measureText(obj[key].value).width)\n\t\t\t\tobj[key].color = data.colors[key]\n\t\t\t\twidth += obj[key].width + p\n\t\t\t}\n\t\t}\n\t\twidth = _max(dateWidth, width) + p\n\t\tx = x - width / 2\n\t\tif (x < 0) x = 0\n\t\tif (x + width > vw) x = vw - width\n\n\t\tctx.fillStyle = bkColor\n\t\tctx.strokeStyle = borderColor\n\t\tctx.beginPath()\n\t\t_drawRoundedRect(ctx, x, 1, width, _labelHeight * 3 + p, 6).fill()\n\t\tctx.stroke()\n\n\t\tctx.fillStyle = labelColor\n\t\tctx.beginPath()\n\t\tctx.fillText(dateLabel, x + width/2 - dateWidth/2, _labelHeight + p/2)\n\n\t\tvar w = 0, _x = x\n\t\tvar font = ctx.font\n\t\tvar bold = _fontShift(ctx.font, 2, true)\n\t\tfor (key in obj) {\n\t\t\tctx.fillStyle = obj[key].color\n\t\t\tw = obj[key].width\n\t\t\tctx.font = bold\n\t\t\tctx.fillText(obj[key].value , _x + p,\t_labelHeight*2 + p\t)\n\t\t\tctx.font = font\n\t\t\tctx.fillText(obj[key].name ,  _x + p,\t_labelHeight*3 + p/1.2)\n\t\t\t_x = _x + w + 10\n\t\t}\n\t\tctx.fill()\n\t}\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\tfunction _drawGraph(self, y, height, useMinimap, lineWidth, grid, maxY) {\n\n\t\tvar ctx = self.ctx\n\t\tvar symbolSize = ctx.measureText('M').width\n\t\tif (grid)\theight = height - symbolSize - 8\n\t\tvar data = self.data, \n\t\t\tnames = self.names;\n\n\t\tvar left = 0, \n\t\t\tright = self.vw,\n\t\t\ta = 0,\n\t\t\tb = self.dataLength-1;\n\t\tif (useMinimap) {\n\t\t\ta = _max(0, self.minimap.a - 1),\n\t\t\tb = _min(self.minimap.b + 1, self.dataLength-1),\n\t\t\tleft = self.minimap.left, \n\t\t\tright = self.minimap.right\n\t\t}\n\t\tvar\twidth = self.vw,\n\t\t\tscaleView = width / (self.dataLength - 1),\n\t\t\trlLeft = left / width,\n\t\t\trlRight = right / width,\n\t\t\tscaleX = (1 / (rlRight - rlLeft)),\n\t\t\tscaleY = height / maxY,\n\t\t\tY0 = y + height,\n\t\t\tvisCount = 0;\n\n\t\tctx.lineWidth = lineWidth\n\t\tctx.lineJoin = 'round'\n\t\tctx.font = self.font\n\t\tfor (var name in names) if (names[name].visible) {\n\t\t\tvisCount++\n\t\t\tctx.beginPath()\n\t\t\tctx.strokeStyle = data.colors[name]\n\t\t\tvar dataY = _getColumn(data, name)\n\t\t\t// [a..b] - no need offscreen drawing\n\t\t\tfor (var i = a; i <= b; i++) ctx.lineTo(\n\t\t\t\t(i * scaleView - left) * scaleX,\n\t\t\t\tY0 - dataY[i+1] * scaleY\n\t\t\t)\n\t\t\tctx.stroke()\n\t\t}\n\n\t\tif (grid && visCount === 0) {\n\t\t\tvar msg = 'No data to display'\n\t\t\tvar msgWidth = ctx.measureText(msg).width\n\t\t\tctx.fillStyle = self.options.colors.label\n\t\t\tctx.font = _fontShift(ctx.font, 4, false)\n\t\t\tctx.fillText(msg, width/2-msgWidth/2 , height/2)\n\t\t\treturn\n\t\t}\n\n\t\tif (!grid ) return\n\t\t//-------------------------Y - lines / labels\n\t\tctx.lineWidth = 0.2\n\t\tctx.beginPath()\n\t\tctx.strokeStyle = 'grey'\n\t\tctx.fillStyle = self.options.colors.label\n\t\tvar dense = _round(_max(0, _log(2, (height / 6)/ scaleY)))\n\t\tvar i = 0\n\t\twhile (i < maxY) {\n\t\t\tvar y = i * scaleY\n\t\t\tctx.moveTo(0, Y0 - y)\n\t\t\tctx.lineTo(width, Y0 - y)\n\t\t\tctx.fillText(_round(i).toString(), 5, Y0 - y )\n\t\t\ti += Math.pow(2, dense)\n\t\t}\n\t\tctx.stroke()\n\n\t\t//-------------------------X - labels\n\t\t// note: this works fine only if intervals are regular\n\t\tvar labelSize = _round(symbolSize * 7)\n\t\tvar dense = _round(_max(0, _log(2, labelSize / (scaleView * scaleX))))\t// (scaleView * scaleX) - in fact is a distance between 2 near points\n\t\t//run out of time to polish label animation\n\t\t//\t\tvar alpha = ((dense - Math.floor(dense)))\n\t\tvar i = 1, label, w, dataX = _getColumn(data, 'x');\n\t\twhile (i < b) {\n\t\t\tvar x = (i * scaleView - left) * scaleX\n\t\t\tif (x > symbolSize) {\n\t\t\t\tlabel = _getDateText(dataX[i+1], 2)\n\t\t\t\tw = ctx.measureText(label).width\n\t\t\t\tctx.fillText(label, _round(x - w / 2),\tY0 + symbolSize + 6)\n\t\t\t}\n\t\t\ti += Math.pow(2, dense)\n\t\t}\n\n\t\t//-------------------------Selection\n\t\tif (self.select !== -1) {\n\t\t\tvar i = _round((left * scaleX + self.select) / (scaleX * scaleView))\n\t\t\tctx.beginPath()\n\t\t\tctx.strokeStyle = 'grey'\n\t\t\tctx.lineWidth = 0.5\n\t\t\tvar x = i * scaleView * scaleX - left * scaleX\n\t\t\tctx.moveTo(x, symbolSize * 5)\n\t\t\tctx.lineTo(x, height)\n\t\t\tctx.stroke()\n\n\t\t\tctx.lineWidth = lineWidth\n\t\t\tfor (var name in names) if (names[name].visible) {\n\t\t\t\tvar dataY = _getColumn(data, name)\n\t\t\t\tctx.beginPath()\n\t\t\t\tctx.strokeStyle = data.colors[name]\n\t\t\t\tctx.fillStyle = self.options.colors.background\n\t\t\t\tvar y = Y0 - dataY[i+1] * scaleY\n\t\t\t\tctx.arc(x, y, 4, 0, 2*Math.PI, false)\n\t\t\t\tctx.fill()\n\t\t\t\tctx.stroke()\n\t\t\t}\n\t\t\t\n\t\t\t_drawLabelBox(ctx, x, data, self.names, i+1, symbolSize * 1.4,  self.options.colors.labelBackground, self.options.colors.minimap ,self.options.colors.label, width)\n\t\t}\n\n\t}\t// _drawGraph\n\n\tfunction _drawMinimap(self) {\n\t\tvar ctx = self.ctx\n\t\tvar sb = self.options.minimapBandSize\n\t\tvar colors = self.options.colors\n\t\tvar r = _getMinimapRect(self)\n\n\t\tctx.beginPath()\n\t\tctx.fillStyle = colors.minimap\n\t\tctx.fillRect(0, r.y, r.x + sb, r.h)\n\t\tctx.fillRect(r.x + r.w - sb, r.y, self.vw - r.x - r.w + sb , r.h)\n\n\t\tctx.fillStyle = colors.minimapFrame\n\t\t_drawRoundedRect(ctx, r.x,            r.y, sb, r.h, 6, [1,1,0,0])\n\t\t_drawRoundedRect(ctx, r.x + r.w - sb, r.y, sb, r.h, 6, [0,0,1,1])\n\t\tctx.fill()\n\t\tctx.fillRect(r.x + sb, r.y, r.w-sb*2, 2)\n\t\tctx.fillRect(r.x + sb, r.y+r.h-2, r.w-sb*2, 2)\n\n\t\t_drawGraph(self,r.y, r.h, false, 1, false, _getMaxY(self, false))\n\n\t\t//animation\n\t\tif (_drag.mode !== 0) {\n\t\t\tctx.beginPath()\n\t\t\tctx.fillStyle = colors.minimapDrag\n\t\t \tctx.arc(r.x + [0, sb/2, r.w-sb/2, r.w/2][_drag.mode], r.y + r.h/2, self._transitions.minimap.pos,   0, 2*Math.PI, false)\n\t\t\tctx.fill()\n\t\t}\n\t}\n\n\tfunction _drawControls(self) {\n\t\tvar ctx = self.ctx\n\t\tctx.font = _fontShift(self.font, 4)\n\t\tvar data = self.data\n\t\t_iterateControls(self, function(r, col){\n\t\t\tctx.beginPath()\n\t\t\tctx.fillStyle = self.options.colors.minimap\n\t\t\tctx.strokeStyle = 'grey'\n\t\t\tctx.lineWidth = 0.3\n\t\t\t_drawRoundedRect(ctx, r.x, r.y, r.w, r.h, r.h/2).fill()\n\t\t\tctx.stroke()\n\t\t\tctx.textBaseline = 'middle'\n\t\t\tif (self.names[col].visible) {\n\t\t\t\tctx.beginPath()\n\t\t\t\tctx.fillStyle = data.colors[col]\n\t\t\t\tctx.arc(r.x + r.h/2, r.y+r.h/2, r.h/3, 0, 2*Math.PI, false)\n\t\t\t\tctx.fill()\n\n\t\t\t\tctx.font = _fontShift(self.font, 4, true)\n\t\t\t\tctx.beginPath()\n\t\t\t\tctx.fillStyle = '#fff'\n\t\t\t\tctx.fillText('\\u2713' , r.x + r.h*0.33, r.y + r.h*0.52)\n\t\t\t\tctx.font = _fontShift(self.font, 4)\n\t\t\t} else {\n\t\t\t\tctx.beginPath()\n\t\t\t\tctx.lineWidth = 1\n\t\t\t\tctx.strokeStyle = data.colors[col]\n\t\t\t\tctx.arc(r.x + r.h/2, r.y+r.h/2, r.h/3, 0, 2*Math.PI, false)\n\t\t\t\tctx.stroke()\n\t\t\t}\n\t\t\tctx.fillStyle = data.colors[col]\n\t\t\tctx.beginPath()\t\n\t\t\tctx.fillText(data.names[col], r.x + r.h , r.y + r.h/2)\n\t\t\tctx.textBaseline = 'bottom'\n\t\t})\n\n\t}\n\n\tfunction _draw() {\n\t\tvar ctx = this.ctx\n\t\tctx.fillStyle = this.options.colors.background\n\t\tctx.fillRect(0, 0, this.vw, this.vh)\n\t\tctx.font = this.font\n\t\tif (this.minimap.b === 0 ) {\n\t\t\t_calcMinimap(this)\n\t\t\tthis.initTransition('graph', 'current', _getMaxY(this, true) )\n\t\t}\n\n\t\t_drawControls(this)\n\t\t_drawMinimap(this)\n\t\n\t\tvar h = _round(this.vh - this.minimap.vh - this.controls.vh)\n\t\t_drawGraph(this, 0, h, true, 2, true, this._transitions.graph.pos)\n\t\t\n\t\tvar r = this._transitions.pointer.pos\n\t\tif (r > 0) {\n\t\t\tctx.beginPath()\n\t\t\tctx.fillStyle = this.options.colors.minimapDrag\n\t\t\tctx.arc(pointerX, pointerY, r,   0, 2*Math.PI, false)\n\t\t\tif (r > 12)\tctx.arc(pointerX, pointerY, r-12,   0, 2*Math.PI, true)\n\t\t\tctx.fill()\n\t\t}\n\t\t\n\t\tif (_transitions(this._transitions)) this.draw() // -- re-call while transitions running\n\t}\n\t// helpers end\n\n\t//--------------------------------------------------------------------------------------\n\t// VanillaChart.prototype methods:\n\tthis.draw = function() {\n\t\trequestAnimationFrame(_draw.bind(this))\n\t}\n\n\tthis.move = function(e) {\n\t\tvar r = e.target.getBoundingClientRect()\n\t\tif (e.type === 'touchstart') e = e.targetTouches[0]\n\t\tvar x = e.clientX - r.left, y = e.clientY - r.top\n\t\tif (y < (this.vh - this.minimap.vh - this.controls.vh)) {\n\t\t\tthis.select = x\n\t\t\tthis.draw()\n\t\t}\n\t}\n\n\tthis.mousetouch\t= function(e) {\n\t\tif (_drag.runBnd || _drag.doneBnd) return\n\t\tvar r = e.target.getBoundingClientRect()\n\t\tvar event = e\n\t\tif (e.type === 'touchstart') e = e.targetTouches[0]\n\t\tpointerX = e.clientX - r.left\n\t\tpointerY = e.clientY - r.top\n\t\t\n\t\t_drag.mode = _getPointingRegion(this, pointerX, pointerY)\n\t\tif (_drag.mode > 0) {\n\t\t\tevent.target.style.cursor = 'w-resize'\n\t\t\t_drag.start = e.clientX\n\t\t\t_drag.left = this.minimap.left\n\t\t\t_drag.right = this.minimap.right\n\t\t\t_drag.runBnd = _dragRun.bind(this)\n\t\t\t_drag.doneBnd = _dragDone.bind(this)\n\t\t\t_listen(document, ['mousemove', 'touchmove'], _drag.runBnd)\n\t\t\t_listen(document, ['mouseup', 'touchend'], _drag.doneBnd)\n\t\t\tthis.initTransition('minimap', 'current', _round(this.minimap.vh*0.65) )\n\t\t} else {\n\t\t\tvar self = this\n\t\t\t_iterateControls(this, function(r, col){\n\t\t\t\tif (_inRect(pointerX, pointerY, r)) {\n\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\tself.setVisibility(col)\n\t\t\t\t\tself.initTransition('pointer', 'current', 50, function () { self._transitions.pointer.pos = 0}.bind(self)  )\n\t\t\t\t}\n\t\t\t})\n\n\t\t}\n\t}\n\n\tthis.setData = function(data) {\n\t\tthis.data = data\n\t\ttry {\n\t\t\tthis.dataLength = data.columns[0].length - 1\n\t\t}\tcatch (e)\t{\n\t\t\tthrow new TypeError('incorrect <inputData> format')\n\t\t}\n\t\tvar ctx = this.ctx\n\t\tctx.font = _fontShift(this.font, 4, true)\n\t\tthis.controls.h = _round(ctx.measureText('M').width * 3.5)\n\t\tthis.controls.width = 0\n\t\tthis.names = {}\n\t\tfor (var k in data.names)\t{\n\t\t\tvar w = ctx.measureText(data.names[k]).width + this.controls.h + this.options.padding * 2\n\t\t\tthis.controls.width += w\n\t\t\tthis.names[k] = {\n\t\t\t\tvisible: true, // visible by default\n\t\t\t\twidth: w - this.options.padding\n\t\t\t}\n\t\t}\n\t\tthis.tree = _buildTree(this)\n\t\tthis.initTransition('graph', 'current', _getMaxY(this, true) )\n\t}\n\n\tthis.setVisibility = function(col, vis) {\n\t\tthis.names[col].visible = (typeof vis === 'undefined')? !this.names[col].visible : vis\n\t\tthis.tree = _buildTree(this)\n\t\tthis.initTransition('graph', 'current', _getMaxY(this, true) )\n\t}\n\n\tthis.initTransition = function(key, from, to, onComplete) {\n\t\tvar trns = this._transitions\n\t\tvar trn = trns[key]\n\t\ttrn.from = (from === 'current')?trn.pos: from\n\t\ttrn.pos = trn.from\n\t\ttrn.to = to\n\t\ttrn.ts = performance.now()\n\t\ttrn.onComplete = onComplete\n\t\tvar running = false\n\t\tfor (var k in trns) running = running || trns[k].run\n\t\tif (!running) this.draw()\n\t\ttrn.run = true\n\t}\n\n\n}).call(VanillaChart.prototype)\n\nif (typeof window !== 'undefined') window.VanillaChart = VanillaChart\n\n})()\n"]}